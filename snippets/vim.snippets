snippet header
	" File: ${1:`expand('%:t')`}
	" Author: ${2:`g:snips_author`}
	" Description: ${3}
	${4:" Last Modified: `strftime("%B %d, %Y")`}
snippet guard
	if exists('${1:did_`Filename()`}') || &cp${2: || version < 700}
		finish
	endif
	let $1 = 1${3}
snippet f
	fun ${1:function_name}(${2})
		${3:" code}
	endf
snippet for
	for ${1:needle} in ${2:haystack}
		${3:" code}
	endfor
snippet wh
	while ${1:condition}
		${2:" code}
	endw
snippet if
	if ${1:condition}
		${2:" code}
	endif
snippet ife
	if ${1:condition}
		${2}
	else
		${3}
	endif

snippet class An vimscript OOP prototype-based object
	" ${1:classname} prototype " {{{
	let s:$1 = {}
	" constructor
	function! s:$1.New() " {{{
		let new$1 = copy(self)
		let new$1.${2:fieldname} = []  
		return new$1
	endfunction " }}}
	" functions 
	function! s:$1.${3:functionName}(${4:argument}) " {{{
		call add(self.$2, a:$4)
		${5:your code here}
	endfunction " }}}
	" $1 }}}

snippet method A vimscript OOP prototype-based object method
	function! s:${1}.${2:functionName}(${3:argument}) " {{{
		${4:your code here}
	endfunction " }}}
