let SessionLoad = 1
if &cp | set nocp | endif
let s:cpo_save=&cpo
set cpo&vim
imap <D-BS> 
imap <M-BS> 
imap <M-Down> }
inoremap <D-Down> <C-End>
imap <M-Up> {
inoremap <D-Up> <C-Home>
noremap! <M-Right> <C-Right>
noremap! <D-Right> <End>
noremap! <M-Left> <C-Left>
noremap! <D-Left> <Home>
inoremap <silent> <S-Tab> =BackwardsSnippet()
inoremap <silent> <Plug>XPTrawKey 
imap <silent> <Plug>XPTfallback <Plug>XPTrawKey
inoremap <silent> <Plug>NERDCommenterInInsert  <BS>:call NERDComment(0, "insert")
imap <silent> <D-9> 9
imap <silent> <D-8> 8
imap <silent> <D-7> 7
imap <silent> <D-6> 6
imap <silent> <D-5> 5
imap <silent> <D-4> 4
imap <silent> <D-3> 3
imap <silent> <D-2> 2
imap <silent> <D-1> 1
imap <silent> <D-0> 10
imap <F1> :Help
imap <Nul> :
map! <D-v> *
map v :call fuf#givenfile#launch('', 0, 'VimFiles>', split(glob('~/.vim/**/*.vim'), "\n"))
map t :FufTag
map f :FufCoverageFile
map e :FufBuffer
noremap <silent>  
nmap <silent> - :call AccordionMode()
nmap <silent> l l:call AccordionMode()
nmap <silent> h h:call AccordionMode()
nmap <silent> k k:call AccordionMode()
nmap <silent> j j:call AccordionMode()
nmap P :call SectionHeadNav(-1, 1)
nmap p :call SectionHeadNav(-1, 0)
nmap N :call SectionHeadNav(1, 1)
nmap n :call SectionHeadNav(1, 0)
nmap d :silent! lclose
nmap ? :call FunctionLocationIndex()
nmap / :call HeaderLocationIndex()
map x :call feedkeys("yyq:p\r", "n")
nmap c :exec ":lcd " . expand("%:p:h") | echo "cwd now: " . getcwd()
snoremap <silent> 	 i<Right>=TriggerSnippet()
nnoremap <silent>  :call Reset() | nohls
vmap  <Plug>TwitvimVisual
nmap <silent> 9 :9wincmd w
nmap <silent> 8 :8wincmd w
nmap <silent> 7 :7wincmd w
nmap <silent> 6 :6wincmd w
nmap <silent> 5 :5wincmd w
nmap <silent> 4 :4wincmd w
nmap <silent> 3 :3wincmd w
nmap <silent> 2 :2wincmd w
nmap <silent> 1 :1wincmd w
nmap <silent> 0 :10wincmd w
snoremap  b<BS>
nmap p :call system("ssh localhost pbcopy", getreg('"')) | echo "Copied default register to pasteboard."
nnoremap g :GundoToggle
nmap <silent>  :call timestamp#remove()
nmap <silent>  :call timestamp#addOrUpdateSolicitingAnnotation()
nmap <silent>  :call timestamp#addOrUpdate("")
nmap <silent> Y :call timestamp#addOrUpdate("", "force")
nmap <silent>  :call timestamp#autoUpdateToggle()
map F :call FileToPasteboard(line("."))
map f :call FileToPasteboard()
nmap s :SnipUp
nmap v :call ReloadVimrc() | :echo "Resourced .vimrc."
snoremap <silent>  `>a=XPTemplateStart(0,{'k':'<C-\++'})
xnoremap <silent>  "0s=XPTemplatePreWrap(@0)
snoremap % b<BS>%
snoremap ' b<BS>'
nnoremap // q/
nnoremap :: q:
nnoremap ?? q?
imap <silent> Â¹ 9
imap <silent> Â¸ 8
imap <silent> Â· 7
imap <silent> Â¶ 6
imap <silent> Âµ 5
imap <silent> Â´ 4
imap <silent> Â³ 3
imap <silent> Â² 2
imap <silent> Â± 1
imap <silent> Â° 10
map Q gq
xmap S <Plug>VSurround
snoremap U b<BS>U
map Y y$
vmap [% [%m'gv``
snoremap \ b<BS>\
map <silent> \w\t <Plug>VimwikiTabMakeDiaryNote
map <silent> \w\w <Plug>VimwikiMakeDiaryNote
map <silent> \ws <Plug>VimwikiUISelect
map <silent> \wt <Plug>VimwikiTabIndex
map <silent> \ww <Plug>VimwikiIndex
nmap <silent> \cv <Plug>VCSVimDiff
nmap <silent> \cU <Plug>VCSUnlock
nmap <silent> \cr <Plug>VCSReview
nmap <silent> \cq <Plug>VCSRevert
nmap <silent> \cN <Plug>VCSSplitAnnotate
nmap <silent> \cL <Plug>VCSLock
nmap <silent> \cg <Plug>VCSGotoOriginal
nmap <silent> \cG <Plug>VCSClearAndGotoOriginal
nmap <silent> \cd <Plug>VCSDiff
nmap <silent> \cD <Plug>VCSDelete
map <silent> \o <Plug>Script_Ed_Scriptnames
nmap \ca <Plug>NERDCommenterAltDelims
vmap \cA <Plug>NERDCommenterAppend
nmap \cA <Plug>NERDCommenterAppend
vmap \c$ <Plug>NERDCommenterToEOL
nmap \c$ <Plug>NERDCommenterToEOL
vmap \cu <Plug>NERDCommenterUncomment
nmap \cu <Plug>NERDCommenterUncomment
vmap \cn <Plug>NERDCommenterNest
nmap \cn <Plug>NERDCommenterNest
vmap \cb <Plug>NERDCommenterAlignBoth
nmap \cb <Plug>NERDCommenterAlignBoth
vmap \cl <Plug>NERDCommenterAlignLeft
nmap \cl <Plug>NERDCommenterAlignLeft
vmap \cy <Plug>NERDCommenterYank
nmap \cy <Plug>NERDCommenterYank
vmap \ci <Plug>NERDCommenterInvert
nmap \ci <Plug>NERDCommenterInvert
vmap \cs <Plug>NERDCommenterSexy
nmap \cs <Plug>NERDCommenterSexy
vmap \cm <Plug>NERDCommenterMinimal
nmap \cm <Plug>NERDCommenterMinimal
vmap \c  <Plug>NERDCommenterToggle
nmap \c  <Plug>NERDCommenterToggle
vmap \cc <Plug>NERDCommenterComment
nmap \cc <Plug>NERDCommenterComment
nmap \p <Plug>RefreshColorScheme
nmap \<F2> <Plug>HexHighlightToggle
nmap <silent> \b :CommandTBuffer
nmap \caL <Plug>CalendarH
nmap \cal <Plug>CalendarV
nmap <silent> \sm <Plug>smgr_MapSnippetsManager
map \rwp <Plug>RestoreWinPosn
map \swp <Plug>SaveWinPosn
map \dk <Plug>DirDiffPrev
map \dj <Plug>DirDiffNext
map \dp <Plug>DirDiffPut
map \dg <Plug>DirDiffGet
map \ 0"ty$:t:echo "Executed: " . @t
map \sv :call OpenRelatedSnippetFileInVsplit()
nmap <silent> \ll o:call timestamp#insert("short") | call FoldWrap()
nmap <silent> \tf :call InsertAnnotation("Finished typing", "$")
nmap <silent> \ts :call InsertAnnotation("Started typing", "0")
nmap <silent> \fi :call FoldInsert()
nmap <silent> \fw :call FoldWrap()
nmap <silent> \sl :call timestamp#insert("long")
nmap <silent> \sd :call timestamp#insert("date")
nmap \hg :HelpGrep
nmap \pp :help:winc _:winc |:help 
nmap \hw :help:silent call AdjustFont(-4):set columns=115 lines=999:winc _:winc |:help 
nmap <silent> \q :call FormatSqlStatement()
nmap <silent> \t :call HandleMantis()
nmap <silent> \/ :call HandleURI()
nmap <silent> \c :call ScratchBuffer("scratch")
nmap <silent> \0 :silent normal zvzt
nmap <silent> \= :call FoldDefaultNodes():normal zv]z[zzt
nmap <silent> \- :GundoToggle
nmap \[ <Plug>HexHighlightRefresh
nmap <silent> \] :NERDTreeToggle
nmap \j :call JournalEntry()
nmap \\ :call CommitSession()
nmap <silent> \w :!wc -w %
vmap ]% ]%m'gv``
snoremap ^ b<BS>^
snoremap ` b<BS>`
omap ar <Plug>(textobj-rubyblock-a)
xmap ar <Plug>(textobj-rubyblock-a)
omap af <Plug>(textobj-function-a)
xmap af <Plug>(textobj-function-a)
vmap a% [%v]%
nmap cs <Plug>Csurround
nmap cr <Plug>Coerce
nmap ds <Plug>Dsurround
nnoremap d  :normal! d
nnoremap dd :normal! dd
vmap dC :normal gv"_xP
vmap dD :normal gvygv"_x
nmap dD :normal 0y$"_dd
nmap gx <Plug>NetrwBrowseX
xmap gS <Plug>VgSurround
omap ir <Plug>(textobj-rubyblock-i)
xmap ir <Plug>(textobj-rubyblock-i)
omap if <Plug>(textobj-function-i)
xmap if <Plug>(textobj-function-i)
xmap s <Plug>Vsurround
nmap ySS <Plug>YSsurround
nmap ySs <Plug>YSsurround
nmap yss <Plug>Yssurround
nmap yS <Plug>YSurround
nmap ys <Plug>Ysurround
nnoremap <C-Down> :silent! call AdjustFont(-1)
nnoremap <C-Up> :silent! call AdjustFont(1)
nnoremap <silent> <C-Right> gt
nnoremap <silent> <C-Left> gT
map <D-f> :CommandT
map <silent> <D-E> :cp 
map <silent> <D-e> :cn 
map <silent> <D-P> :lp 
map <silent> <D-p> :ln 
nmap <silent> <D-w> :bd
nmap <silent> <D-t> :10tabnew
map <M-Down> }
noremap <D-Down> <C-End>
map <M-Up> {
noremap <D-Up> <C-Home>
noremap <M-Right> <C-Right>
noremap <D-Right> <End>
noremap <M-Left> <C-Left>
noremap <D-Left> <Home>
snoremap <Left> bi
snoremap <Right> a
snoremap <BS> b<BS>
snoremap <silent> <S-Tab> i<Right>=BackwardsSnippet()
nnoremap <silent> <Plug>NetrwBrowseX :call netrw#NetrwBrowseX(expand("<cWORD>"),0)
snoremap <Plug>selectToInsert d<BS>
nnoremap <silent> <Plug>CVSWatchRemove :CVSWatch remove
nnoremap <silent> <Plug>CVSWatchOn :CVSWatch on
nnoremap <silent> <Plug>CVSWatchOff :CVSWatch off
nnoremap <silent> <Plug>CVSWatchAdd :CVSWatch add
nnoremap <silent> <Plug>CVSWatchers :CVSWatchers
nnoremap <silent> <Plug>CVSUnedit :CVSUnedit
nnoremap <silent> <Plug>CVSEditors :CVSEditors
nnoremap <silent> <Plug>CVSEdit :CVSEdit
nnoremap <silent> <Plug>VCSVimDiff :VCSVimDiff
nnoremap <silent> <Plug>VCSUpdate :VCSUpdate
nnoremap <silent> <Plug>VCSUnlock :VCSUnlock
nnoremap <silent> <Plug>VCSStatus :VCSStatus
nnoremap <silent> <Plug>VCSSplitAnnotate :VCSAnnotate!
nnoremap <silent> <Plug>VCSReview :VCSReview
nnoremap <silent> <Plug>VCSRevert :VCSRevert
nnoremap <silent> <Plug>VCSLog :VCSLog
nnoremap <silent> <Plug>VCSLock :VCSLock
nnoremap <silent> <Plug>VCSInfo :VCSInfo
nnoremap <silent> <Plug>VCSClearAndGotoOriginal :VCSGotoOriginal!
nnoremap <silent> <Plug>VCSGotoOriginal :VCSGotoOriginal
nnoremap <silent> <Plug>VCSDiff :VCSDiff
nnoremap <silent> <Plug>VCSDelete :VCSDelete
nnoremap <silent> <Plug>VCSCommit :VCSCommit
nnoremap <silent> <Plug>VCSAnnotate :VCSAnnotate
nnoremap <silent> <Plug>VCSAdd :VCSAdd
nmap <silent> <Plug>NERDCommenterAppend :call NERDComment(0, "append")
nnoremap <silent> <Plug>NERDCommenterToEOL :call NERDComment(0, "toEOL")
vnoremap <silent> <Plug>NERDCommenterUncomment :call NERDComment(1, "uncomment")
nnoremap <silent> <Plug>NERDCommenterUncomment :call NERDComment(0, "uncomment")
vnoremap <silent> <Plug>NERDCommenterNest :call NERDComment(1, "nested")
nnoremap <silent> <Plug>NERDCommenterNest :call NERDComment(0, "nested")
vnoremap <silent> <Plug>NERDCommenterAlignBoth :call NERDComment(1, "alignBoth")
nnoremap <silent> <Plug>NERDCommenterAlignBoth :call NERDComment(0, "alignBoth")
vnoremap <silent> <Plug>NERDCommenterAlignLeft :call NERDComment(1, "alignLeft")
nnoremap <silent> <Plug>NERDCommenterAlignLeft :call NERDComment(0, "alignLeft")
vmap <silent> <Plug>NERDCommenterYank :call NERDComment(1, "yank")
nmap <silent> <Plug>NERDCommenterYank :call NERDComment(0, "yank")
vnoremap <silent> <Plug>NERDCommenterInvert :call NERDComment(1, "invert")
nnoremap <silent> <Plug>NERDCommenterInvert :call NERDComment(0, "invert")
vnoremap <silent> <Plug>NERDCommenterSexy :call NERDComment(1, "sexy")
nnoremap <silent> <Plug>NERDCommenterSexy :call NERDComment(0, "sexy")
vnoremap <silent> <Plug>NERDCommenterMinimal :call NERDComment(1, "minimal")
nnoremap <silent> <Plug>NERDCommenterMinimal :call NERDComment(0, "minimal")
vnoremap <silent> <Plug>NERDCommenterToggle :call NERDComment(1, "toggle")
nnoremap <silent> <Plug>NERDCommenterToggle :call NERDComment(0, "toggle")
vnoremap <silent> <Plug>NERDCommenterComment :call NERDComment(1, "norm")
nnoremap <silent> <Plug>NERDCommenterComment :call NERDComment(0, "norm")
nnoremap <silent> <F11> :call conque_term#exec_file()
nnoremap <silent> <Plug>CalendarH :cal Calendar(1)
nnoremap <silent> <Plug>CalendarV :cal Calendar(0)
map <M-F3> :call CSV_clear_all()  
map <S-F3> :call CSV_toggle_field(CSV_get_field(0))
map <S-F5> :call CSV_goto_highlighted(-1)
map <S-F6> :call CSV_goto_highlighted(1)
map <C-F5> :call CSV_goto_field()
map <C-F6> :call CSV_get_new_sep()
nmap <silent> <Plug>RestoreWinPosn :call RestoreWinPosn()
nmap <silent> <Plug>SaveWinPosn :call SaveWinPosn()
map <D-j>e :GrepEngage 
map <D-j>p :cd ~/sandbox/personal/
map <D-j>w :cd ~/sandbox/work/vm/rpx/ruby/rails/
map <silent> <C-S-Tab> :BufExplorerk
map <silent> <C-Tab> :BufExplorerj
map <silent> <D-9> 9gt
map <silent> <D-8> 8gt
map <silent> <D-7> 7gt
map <silent> <D-6> 6gt
map <silent> <D-5> 5gt
map <silent> <D-4> 4gt
map <silent> <D-3> 3gt
map <silent> <D-2> 2gt
map <silent> <D-1> 1gt
map <silent> <D-0> 10gt
nmap <Down> :<Down>
nmap <Up> :<Up>
nmap <Right> :<Down>
nmap <Left> :<Up>
map <F1> :Help
nnoremap <Nul> :
vmap <D-x> "*d
vmap <D-c> "*y
vmap <D-v> "-d"*P
nmap <D-v> "*P
imap S <Plug>ISurround
imap s <Plug>Isurround
inoremap <silent> 	 =TriggerSnippet()
imap <silent>  a
inoremap  :set completeopt+=menuonea
inoremap <silent> 	 =ShowAvailableSnips()
inoremap <silent>  =XPTemplateStart(0,{'k':'<C-r++<C-\++','forcePum':1})
inoremap <silent>  =XPTemplateStart(0,{'k':'<C-r++<C-r++<C-\++','popupOnly':1})
imap  <Plug>Isurround
inoremap  u
inoremap  u
imap v  :call ReloadVimrc() | :echo "Resourced .vimrc."
inoremap <silent>  =XPTemplateStart(0,{'k':'<C-\++'})
onoremap <expr> Â¡ ToggleNumberDisplay()
xnoremap <expr> Â¡ ToggleNumberDisplay()
nnoremap <expr> Â¡ ToggleNumberDisplay()
map <silent> Â¹ 9gt
map <silent> Â¸ 8gt
map <silent> Â· 7gt
map <silent> Â¶ 6gt
map <silent> Âµ 5gt
map <silent> Â´ 4gt
map <silent> Â³ 3gt
map <silent> Â² 2gt
map <silent> Â± 1gt
map <silent> Â° 10gt
vmap Ã´ <Plug>TwitvimVisual
let &cpo=s:cpo_save
unlet s:cpo_save
set autowrite
set background=dark
set backspace=indent,eol,start
set clipboard=unnamed
set commentstring=
set diffopt=filler,vertical
set directory=~/.vim/swap//,~/vimfiles/swap//
set display=lastline
set expandtab
set fileencodings=ucs-bom,utf-8,default,latin1
set foldlevelstart=9
set foldopen=block,hor,mark,percent,quickfix,search,tag,undo,jump
set fuoptions=maxhorz,maxvert
set guifont=Inconsolata:h11
set guioptions=egrLtc
set guitablabel=%m\ %N\ %t\ %r
set helplang=en
set history=10000
set hlsearch
set ignorecase
set incsearch
set iskeyword=@,48-57,_,192-255,-
set langmenu=none
set laststatus=2
set listchars=tab:>-,trail:-
set mouse=a
set printexpr=system('open\ -a\ Preview\ '.v:fname_in)\ +\ v:shell_error
set ruler
set rulerformat=%-14.(%l,%c%V%)%=%P%{XPMautoUpdate(\"ruler\")}
set runtimepath=~/.vim,~/.vim/bundle/AnsiEsc.vim,~/.vim/bundle/Rainbow-Parenthsis-Bundle,~/.vim/bundle/SnippetsMgr,~/.vim/bundle/abolish,~/.vim/bundle/ack,~/.vim/bundle/ansiesc,~/.vim/bundle/autotag,~/.vim/bundle/bufexplorer,~/.vim/bundle/calendar,~/.vim/bundle/cocoa,~/.vim/bundle/command-t,~/.vim/bundle/conque,~/.vim/bundle/disabled,~/.vim/bundle/fugitive,~/.vim/bundle/fuzzyfinder,~/.vim/bundle/gundo,~/.vim/bundle/hexhighlight,~/.vim/bundle/jslint,~/.vim/bundle/kellys,~/.vim/bundle/l9,~/.vim/bundle/matchit,~/.vim/bundle/matrix,~/.vim/bundle/nerdcommenter,~/.vim/bundle/nerdtree,~/.vim/bundle/paster,~/.vim/bundle/pickacolor,~/.vim/bundle/project,~/.vim/bundle/rails,~/.vim/bundle/ruby-matchit,~/.vim/bundle/screenshot,~/.vim/bundle/script-ed,~/.vim/bundle/sessionman,~/.vim/bundle/snipmate,~/.vim/bundle/space,~/.vim/bundle/sparkup,~/.vim/bundle/statuslinehighlight,~/.vim/bundle/surround,~/.vim/bundle/syntastic,~/.vim/bundle/tagbar,~/.vim/bundle/textobj-function,~/.vim/bundle/textobj-rubyblock,~/.vim/bundle/textobj-user,~/.vim/b
set sessionoptions=folds,help,options,tabpages,winsize,globals,sesdir,resize,winpos,unix
set shiftwidth=4
set shortmess=filnxtToOIA
set showcmd
set smartcase
set softtabstop=4
set spellcapcheck=off
set splitbelow
set splitright
set statusline=%<(%n)\ %m%y%r\ %f\ %=%-14.(%l,%c%V%)\ %P
set switchbuf=useopen
set tabline=%!MyTabLine()
set tags=./tags,tags,~/sandbox/personal/tags,~/.vim/tags
set termencoding=utf-8
set undolevels=500
set visualbell
set wildignore=*.o,*.sw?,*.git,*.svn,*.hg,**/build,*.?ib,*.png,*.jpg,*.jpeg,*.mov,*.gif,*.bom,*.azw,*.lpr,*.mbp,*.mode1v3,*.gz,*.vmwarevm,*.rtf,*.pkg,*.developerprofile,*.xcodeproj,*.pdf,*.dmg,*.db,*.otf,*.bz2,*.tiff,*.iso,*.jar,*.dat,**/Cache,*.cache,*.sqlite*,*.collection,*.qsindex,*.qsplugin,*.growlTicket,*.part,*.ics,*.ico,**/iPhone\ Simulator,*.lock*,*.webbookmark
set window=95
set winminheight=0
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
let NERDTreeMapPreviewSplit = "gi"
let NERDTreeShowHidden = "0"
let NERDTreeMinimalUI = "0"
let NERDUsePlaceHolders = "1"
let DirDiffSort =  1 
let NERDTreeMapToggleHidden = "I"
let NERDTreeWinSize = "31"
let NERDRemoveExtraSpaces = "0"
let ConqueTerm_PyExe = ""
let NERDTreeMapMenu = "m"
let NERDTreeMapJumpParent = "p"
let NERDTreeShowBookmarks = "0"
let DirDiffTextAnd = " and "
let XPT#let_sid = "map <Plug>xsid <SID>|let s:sid=matchstr(maparg(\"<Plug>xsid\"), \"\\\\d\\\\+_\")|unmap <Plug>xsid"
let NERDTreeMapOpenSplit = "i"
let CommandTMatchWindowAtTop =  1 
let NERDTreeShowLineNumbers = "0"
let NERDTreeMapPreviewVSplit = "gs"
let NERDTreeHighlightCursorline = "1"
let ConqueTerm_CloseOnEnd =  0 
let NERDCreateDefaultMappings = "1"
let ConqueTerm_InsertOnEnter =  0 
let NERDTreeMapDeleteBookmark = "D"
let NERDTreeMapRefreshRoot = "R"
let NERDTreeAutoCenter = "1"
let TailMinusF_Center_Win =  0 
let NERDTreeMapOpenVSplit = "s"
let NERDTreeShowFiles = "1"
let ConqueTerm_TERM = "vt100"
let ConqueTerm_PromptRegex = "^\\w\\+@[0-9A-Za-z_.-]\\+:[0-9A-Za-z_./\\~,:-]\\+\\$"
let NERDTreeMapJumpFirstChild = "K"
let NERDTreeMapToggleBookmarks = "B"
let ConqueTerm_SendFileKey = "<F10>"
let ConqueTerm_SendFunctionKeys =  0 
let NERDTreeBookmarksFile = "/Users/seth/.NERDTreeBookmarks"
let TailMinusF_Height =  10 
let DirDiffInteractive =  0 
let ConqueTerm_CWInsert =  0 
let DirDiffAddArgs = ""
let XPMpreferRight = "r"
let NERDTreeMapOpenInTabSilent = "T"
let NERDTreeMapHelp = "?"
let NERDTreeMapJumpPrevSibling = "<C-k>"
let NERDDefaultNesting = "1"
let NERDTreeMapOpenInTab = "t"
let NERDTreeChDirMode = "0"
let ConqueTerm_CodePage =  0 
let NERDTreeAutoCenterThreshold = "3"
let DirDiffIgnore = ""
let DirDiffTextFiles = "Files "
let ConqueTerm_StartMessages =  0 
let NERDTreeHijackNetrw = "1"
let DrChipTopLvlMenu = "DrChip."
let CSV_field_list = ""
let ConqueTerm_ExecFileKey = "<F11>"
let XPT#ver =  2 
let DirDiffTextDiffer = " differ"
let MailApp_bundle = "~/.vim/bundle/MailApp/MailApp.bundle/"
let ConqueTerm_ToggleKey = "<F8>"
let NERDBlockComIgnoreEmpty = "0"
let AutoHiVersion = "0.2"
let DirDiffIgnoreCase =  0 
let NERDTreeSortDirs = "1"
let NERDTreeMapToggleFiles = "F"
let NERDAllowAnyVisualDelims = "1"
let ConqueTerm_Idx =  0 
let NERDTreeMapOpenRecursively = "O"
let NERDTreeMapUpdirKeepOpen = "U"
let NERDTreeMapCloseDir = "x"
let NERDTreeMapPreview = "go"
let NERDMenuMode = "3"
let NERDTreeRemoveDirCmd = "rm -rf "
let CSV_string_delimiter = "\""
let ConqueTerm_ReadUnfocused =  0 
let NERDTreeCaseSensitiveSort = "0"
let ConqueTerm_PyVersion =  2 
let NERDTreeMapRefresh = "r"
let NERDTreeMouseMode = "1"
let DirDiffExcludes = ""
let CSV_mono =  0 
let BufExplorer_title = "[Buf List]"
let DirDiffTextOnlyIn = "Only in "
let XPT#nonEscaped = "\\%(\\%(\\[^\\\\]\\|\\^\\)\\%(\\\\\\\\\\)\\*\\)\\@<="
let ConqueTerm_SendVisKey = "<F9>"
let NERDTreeMapChangeRoot = "C"
let NERDCompactSexyComs = "0"
let NERDTreeMapOpenExpl = "e"
let NERDTreeMapCloseChildren = "X"
let ConqueTerm_EscKey = "<Esc>"
let TailMinusF_Loaded =  1 
let ConqueTerm_Color =  1 
let ConqueTerm_Version =  210 
let ConqueTerm_ColorMode = ""
let NERDTreeNotificationThreshold = "100"
let NERDTreeMapActivateNode = "o"
let MailAppl_from = "Seth Milliken <seth@araxia.net>"
let NERDTreeWinPos = "left"
let NERDTreeStatusline = "%{exists('b:NERDTreeRoot')?b:NERDTreeRoot.path.str():''}"
let XPMpreferLeft = "l"
let ConqueTerm_FastMode =  0 
let NERDTreeMapToggleFilters = "f"
let NERDSpaceDelims = "0"
let NERDLPlace = "[>"
let CSV_separator = ","
let DirDiffDynamicDiffText =  0 
let NERDTreeMapUpdir = "u"
let NERDCommentWholeLinesInVMode = "0"
let NERDTreeMapChdir = "cd"
let NERDRPlace = "<]"
let NERDTreeMapToggleZoom = "A"
let DirDiffWindowSize =  14 
let NERDChristmasTree = "1"
let NERDRemoveAltComs = "1"
let NERDTreeMapJumpLastChild = "J"
let NERDTreeMapJumpNextSibling = "<C-j>"
let NERDTreeMapJumpRoot = "P"
let NERDTreeCopyCmd = "cp -r "
let NERDTreeMapQuit = "q"
let ConqueTerm_SessionSupport =  0 
let NERDTreeDirArrows = "0"
let BufExploreAdd =  1 
let ConqueTerm_Loaded =  1 
let ConqueTerm_Syntax = "conque_term"
let NERDTreeQuitOnOpen = "0"
silent only
exe "cd " . escape(expand("<sfile>:p:h"), ' ')
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +0 ~/sandbox/work/vm/rpx/ruby/rails/config/routes.rb
badd +0 ~/sandbox/work/vm/rpx/ruby/rails/test/unit/portable_contacts_test.rb
badd +0 ~/sandbox/work/vm/rpx/ruby/rails/lib/portable_contacts/converters/myspace.rb
badd +0 ~/sandbox/work/vm/rpx/ruby/rails/lib/portable_contacts/model.rb
silent! argdel *
set lines=96 columns=314
winpos 55 2100
edit ~/sandbox/work/vm/rpx/ruby/rails/config/routes.rb
set splitbelow splitright
wincmd t
set winheight=1 winwidth=1
argglobal
let s:cpo_save=&cpo
set cpo&vim
nmap <buffer> gf <Plug>RailsTabFind
nmap <buffer> f <Plug>RailsSplitFind
nnoremap <buffer> <silent> g} :exe        "ptjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent> } :exe          "ptag =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g] :exe      "stselect =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g :exe        "stjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent>  :exe v:count1."stag =RubyCursorIdentifier()"
nnoremap <buffer> <silent> ] :exe v:count1."stag =RubyCursorIdentifier()"
nnoremap <buffer> <silent>  :exe  v:count1."tag =RubyCursorIdentifier()"
nmap <buffer> [f <Plug>RailsAlternate
nmap <buffer> ]f <Plug>RailsRelated
nmap <buffer> gf <Plug>RailsFind
nnoremap <buffer> <silent> g] :exe       "tselect =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g :exe         "tjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent> <Plug>RailsTabFind :RTfind
nnoremap <buffer> <silent> <Plug>RailsVSplitFind :RVfind
nnoremap <buffer> <silent> <Plug>RailsSplitFind :RSfind
nnoremap <buffer> <silent> <Plug>RailsFind :REfind
nnoremap <buffer> <silent> <Plug>RailsRelated :R
nnoremap <buffer> <silent> <Plug>RailsAlternate :A
cnoremap <buffer> <expr>  fugitive#buffer().rev()
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal noautoindent
setlocal balloonexpr=RubyBalloonexpr()
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=:#
setlocal commentstring=#\ %s
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=syntaxcomplete#Complete
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
set cursorline
setlocal cursorline
setlocal define=^\\s*def\\s\\+\\(self\\.\\)\\=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'ruby'
setlocal filetype=ruby
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=9
setlocal foldmarker={{{,}}}
set foldmethod=syntax
setlocal foldmethod=syntax
setlocal foldminlines=1
setlocal foldnestmax=20
set foldtext=CleanFoldText()
setlocal foldtext=CleanFoldText()
setlocal formatexpr=
setlocal formatoptions=croql
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=2
setlocal include=^\\s*\\<\\(load\\|w*require\\)\\>
setlocal includeexpr=RailsIncludeexpr()
setlocal indentexpr=GetRubyIndent()
setlocal indentkeys=0{,0},0),0],!^F,o,O,e,=end,=elsif,=when,=ensure,=rescue,==begin,==end
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255,-
setlocal keywordprg=ri\ -T
set linebreak
setlocal linebreak
setlocal nolisp
set list
setlocal list
setlocal nomacmeta
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal nonumber
setlocal numberwidth=4
setlocal omnifunc=rubycomplete#Complete
setlocal path=.,~/sandbox/work/vm/rpx/ruby/rails,~/sandbox/work/vm/rpx/ruby/rails/app,~/sandbox/work/vm/rpx/ruby/rails/app/models,~/sandbox/work/vm/rpx/ruby/rails/app/controllers,~/sandbox/work/vm/rpx/ruby/rails/app/helpers,~/sandbox/work/vm/rpx/ruby/rails/config,~/sandbox/work/vm/rpx/ruby/rails/lib,~/sandbox/work/vm/rpx/ruby/rails/app/views,~/sandbox/work/vm/rpx/ruby/rails/test,~/sandbox/work/vm/rpx/ruby/rails/test/unit,~/sandbox/work/vm/rpx/ruby/rails/test/functional,~/sandbox/work/vm/rpx/ruby/rails/test/integration,~/sandbox/work/vm/rpx/ruby/rails/app/*,~/sandbox/work/vm/rpx/ruby/rails/vendor,~/sandbox/work/vm/rpx/ruby/rails/vendor/plugins/*/lib,~/sandbox/work/vm/rpx/ruby/rails/vendor/plugins/*/test,~/sandbox/work/vm/rpx/ruby/rails/vendor/rails/*/lib,~/sandbox/work/vm/rpx/ruby/rails/vendor/rails/*/test,/Library/Ruby/Site/1.8,/Library/Ruby/Site/1.8/powerpc-darwin10.0,/Library/Ruby/Site/1.8/universal-darwin10.0,/Library/Ruby/Site,/System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/vendor_ruby/1.8,/System/
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
set relativenumber
setlocal relativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=2
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=2
setlocal nospell
setlocal spellcapcheck=off
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=%<(%n)\ %m%y%{rails#statusline()}%r\ %f\ %=%-14.(%l,%c%V%)\ %P%{XPMautoUpdate(\"statusline\")}
setlocal suffixesadd=.rb,.rhtml,.erb,.rxml,.builder,.rjs,.mab,.liquid,.haml,.dryml,.mn,.yml,.csv,.rake,s.rb
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'ruby'
setlocal syntax=ruby
endif
setlocal tabstop=8
setlocal tags=~/sandbox/work/vm/rpx/ruby/rails/tmp/tags,./tags,tags,~/sandbox/personal/tags,~/.vim/tags,~/sandbox/work/vm/rpx/ruby/.git/ruby.tags,~/sandbox/work/vm/rpx/ruby/.git/tags,~/sandbox/work/vm/rpx/ruby/rails/tags
setlocal textwidth=0
setlocal thesaurus=
setlocal noundofile
set winfixheight
setlocal winfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
let s:l = 2 - ((0 * winheight(0) + 47) / 95)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
2
normal! 02l
tabedit ~/sandbox/work/vm/rpx/ruby/rails/lib/portable_contacts/model.rb
set splitbelow splitright
wincmd _ | wincmd |
vsplit
wincmd _ | wincmd |
vsplit
2wincmd h
wincmd w
wincmd w
wincmd t
set winheight=1 winwidth=1
wincmd =
argglobal
let s:cpo_save=&cpo
set cpo&vim
nmap <buffer> gf <Plug>RailsTabFind
nmap <buffer> f <Plug>RailsSplitFind
nnoremap <buffer> <silent> g} :exe        "ptjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent> } :exe          "ptag =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g] :exe      "stselect =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g :exe        "stjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent>  :exe v:count1."stag =RubyCursorIdentifier()"
nnoremap <buffer> <silent> ] :exe v:count1."stag =RubyCursorIdentifier()"
nnoremap <buffer> <silent>  :exe  v:count1."tag =RubyCursorIdentifier()"
nmap <buffer> [f <Plug>RailsAlternate
nmap <buffer> ]f <Plug>RailsRelated
nmap <buffer> gf <Plug>RailsFind
nnoremap <buffer> <silent> g] :exe       "tselect =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g :exe         "tjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent> <Plug>RailsTabFind :RTfind
nnoremap <buffer> <silent> <Plug>RailsVSplitFind :RVfind
nnoremap <buffer> <silent> <Plug>RailsSplitFind :RSfind
nnoremap <buffer> <silent> <Plug>RailsFind :REfind
nnoremap <buffer> <silent> <Plug>RailsRelated :R
nnoremap <buffer> <silent> <Plug>RailsAlternate :A
cnoremap <buffer> <expr>  fugitive#buffer().rev()
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal noautoindent
setlocal balloonexpr=RubyBalloonexpr()
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=:#
setlocal commentstring=#\ %s
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=syntaxcomplete#Complete
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
set cursorline
setlocal cursorline
setlocal define=^\\s*def\\s\\+\\(self\\.\\)\\=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'ruby'
setlocal filetype=ruby
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=9
setlocal foldmarker={{{,}}}
set foldmethod=syntax
setlocal foldmethod=syntax
setlocal foldminlines=1
setlocal foldnestmax=20
set foldtext=CleanFoldText()
setlocal foldtext=CleanFoldText()
setlocal formatexpr=
setlocal formatoptions=croql
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=2
setlocal include=^\\s*\\<\\(load\\|w*require\\)\\>
setlocal includeexpr=RailsIncludeexpr()
setlocal indentexpr=GetRubyIndent()
setlocal indentkeys=0{,0},0),0],!^F,o,O,e,=end,=elsif,=when,=ensure,=rescue,==begin,==end
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255,-
setlocal keywordprg=ri\ -T
set linebreak
setlocal linebreak
setlocal nolisp
set list
setlocal list
setlocal nomacmeta
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal nonumber
setlocal numberwidth=4
setlocal omnifunc=rubycomplete#Complete
setlocal path=.,~/sandbox/work/vm/rpx/ruby/rails,~/sandbox/work/vm/rpx/ruby/rails/app,~/sandbox/work/vm/rpx/ruby/rails/app/models,~/sandbox/work/vm/rpx/ruby/rails/app/controllers,~/sandbox/work/vm/rpx/ruby/rails/app/helpers,~/sandbox/work/vm/rpx/ruby/rails/config,~/sandbox/work/vm/rpx/ruby/rails/lib,~/sandbox/work/vm/rpx/ruby/rails/app/views,~/sandbox/work/vm/rpx/ruby/rails/test,~/sandbox/work/vm/rpx/ruby/rails/test/unit,~/sandbox/work/vm/rpx/ruby/rails/test/functional,~/sandbox/work/vm/rpx/ruby/rails/test/integration,~/sandbox/work/vm/rpx/ruby/rails/app/*,~/sandbox/work/vm/rpx/ruby/rails/vendor,~/sandbox/work/vm/rpx/ruby/rails/vendor/plugins/*/lib,~/sandbox/work/vm/rpx/ruby/rails/vendor/plugins/*/test,~/sandbox/work/vm/rpx/ruby/rails/vendor/rails/*/lib,~/sandbox/work/vm/rpx/ruby/rails/vendor/rails/*/test,/Library/Ruby/Site/1.8,/Library/Ruby/Site/1.8/powerpc-darwin10.0,/Library/Ruby/Site/1.8/universal-darwin10.0,/Library/Ruby/Site,/System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/vendor_ruby/1.8,/System/
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
set relativenumber
setlocal relativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=2
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=2
setlocal nospell
setlocal spellcapcheck=off
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=%<(%n)\ %m%y%{rails#statusline()}%r\ %f\ %=%-14.(%l,%c%V%)\ %P%{XPMautoUpdate(\"statusline\")}
setlocal suffixesadd=.rb,.rhtml,.erb,.rxml,.builder,.rjs,.mab,.liquid,.haml,.dryml,.mn,.yml,.csv,.rake,s.rb
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'ruby'
setlocal syntax=ruby
endif
setlocal tabstop=8
setlocal tags=~/sandbox/work/vm/rpx/ruby/rails/tmp/tags,./tags,tags,~/sandbox/personal/tags,~/.vim/tags,~/sandbox/work/vm/rpx/ruby/.git/ruby.tags,~/sandbox/work/vm/rpx/ruby/.git/tags,~/sandbox/work/vm/rpx/ruby/rails/tags
setlocal textwidth=0
setlocal thesaurus=
setlocal noundofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
4
normal zo
4
normal zo
9
normal zo
9
normal zo
let s:l = 7 - ((6 * winheight(0) + 47) / 94)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
7
normal! 02l
wincmd w
argglobal
edit ~/sandbox/work/vm/rpx/ruby/rails/lib/portable_contacts/converters/myspace.rb
let s:cpo_save=&cpo
set cpo&vim
nmap <buffer> gf <Plug>RailsTabFind
nmap <buffer> f <Plug>RailsSplitFind
nnoremap <buffer> <silent> g} :exe        "ptjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent> } :exe          "ptag =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g] :exe      "stselect =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g :exe        "stjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent>  :exe v:count1."stag =RubyCursorIdentifier()"
nnoremap <buffer> <silent> ] :exe v:count1."stag =RubyCursorIdentifier()"
nnoremap <buffer> <silent>  :exe  v:count1."tag =RubyCursorIdentifier()"
nmap <buffer> [f <Plug>RailsAlternate
nmap <buffer> ]f <Plug>RailsRelated
nmap <buffer> gf <Plug>RailsFind
nnoremap <buffer> <silent> g] :exe       "tselect =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g :exe         "tjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent> <Plug>RailsTabFind :RTfind
nnoremap <buffer> <silent> <Plug>RailsVSplitFind :RVfind
nnoremap <buffer> <silent> <Plug>RailsSplitFind :RSfind
nnoremap <buffer> <silent> <Plug>RailsFind :REfind
nnoremap <buffer> <silent> <Plug>RailsRelated :R
nnoremap <buffer> <silent> <Plug>RailsAlternate :A
cnoremap <buffer> <expr>  fugitive#buffer().rev()
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal noautoindent
setlocal balloonexpr=RubyBalloonexpr()
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=:#
setlocal commentstring=#\ %s
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=syntaxcomplete#Complete
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
set cursorline
setlocal cursorline
setlocal define=^\\s*def\\s\\+\\(self\\.\\)\\=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'ruby'
setlocal filetype=ruby
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=9
setlocal foldmarker={{{,}}}
set foldmethod=syntax
setlocal foldmethod=syntax
setlocal foldminlines=1
setlocal foldnestmax=20
set foldtext=CleanFoldText()
setlocal foldtext=CleanFoldText()
setlocal formatexpr=
setlocal formatoptions=croql
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=2
setlocal include=^\\s*\\<\\(load\\|w*require\\)\\>
setlocal includeexpr=RailsIncludeexpr()
setlocal indentexpr=GetRubyIndent()
setlocal indentkeys=0{,0},0),0],!^F,o,O,e,=end,=elsif,=when,=ensure,=rescue,==begin,==end
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255,-
setlocal keywordprg=ri\ -T
set linebreak
setlocal linebreak
setlocal nolisp
set list
setlocal list
setlocal nomacmeta
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal nonumber
setlocal numberwidth=4
setlocal omnifunc=rubycomplete#Complete
setlocal path=.,~/sandbox/work/vm/rpx/ruby/rails,~/sandbox/work/vm/rpx/ruby/rails/app,~/sandbox/work/vm/rpx/ruby/rails/app/models,~/sandbox/work/vm/rpx/ruby/rails/app/controllers,~/sandbox/work/vm/rpx/ruby/rails/app/helpers,~/sandbox/work/vm/rpx/ruby/rails/config,~/sandbox/work/vm/rpx/ruby/rails/lib,~/sandbox/work/vm/rpx/ruby/rails/app/views,~/sandbox/work/vm/rpx/ruby/rails/test,~/sandbox/work/vm/rpx/ruby/rails/test/unit,~/sandbox/work/vm/rpx/ruby/rails/test/functional,~/sandbox/work/vm/rpx/ruby/rails/test/integration,~/sandbox/work/vm/rpx/ruby/rails/app/*,~/sandbox/work/vm/rpx/ruby/rails/vendor,~/sandbox/work/vm/rpx/ruby/rails/vendor/plugins/*/lib,~/sandbox/work/vm/rpx/ruby/rails/vendor/plugins/*/test,~/sandbox/work/vm/rpx/ruby/rails/vendor/rails/*/lib,~/sandbox/work/vm/rpx/ruby/rails/vendor/rails/*/test,/Library/Ruby/Site/1.8,/Library/Ruby/Site/1.8/powerpc-darwin10.0,/Library/Ruby/Site/1.8/universal-darwin10.0,/Library/Ruby/Site,/System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/vendor_ruby/1.8,/System/
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
set relativenumber
setlocal relativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=2
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=2
setlocal nospell
setlocal spellcapcheck=off
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=%<(%n)\ %m%y%{rails#statusline()}%r\ %f\ %=%-14.(%l,%c%V%)\ %P%{XPMautoUpdate(\"statusline\")}
setlocal suffixesadd=.rb,.rhtml,.erb,.rxml,.builder,.rjs,.mab,.liquid,.haml,.dryml,.mn,.yml,.csv,.rake,s.rb
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'ruby'
setlocal syntax=ruby
endif
setlocal tabstop=8
setlocal tags=~/sandbox/work/vm/rpx/ruby/rails/tmp/tags,./tags,tags,~/sandbox/personal/tags,~/.vim/tags,~/sandbox/work/vm/rpx/ruby/.git/ruby.tags,~/sandbox/work/vm/rpx/ruby/.git/tags,~/sandbox/work/vm/rpx/ruby/rails/tags
setlocal textwidth=0
setlocal thesaurus=
setlocal noundofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
let s:l = 1 - ((0 * winheight(0) + 47) / 94)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
1
normal! 0
lcd ~/sandbox/work/vm/rpx/ruby/rails
wincmd w
argglobal
edit ~/sandbox/work/vm/rpx/ruby/rails/test/unit/portable_contacts_test.rb
let s:cpo_save=&cpo
set cpo&vim
nmap <buffer> gf <Plug>RailsTabFind
nmap <buffer> f <Plug>RailsSplitFind
nnoremap <buffer> <silent> g} :exe        "ptjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent> } :exe          "ptag =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g] :exe      "stselect =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g :exe        "stjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent>  :exe v:count1."stag =RubyCursorIdentifier()"
nnoremap <buffer> <silent> ] :exe v:count1."stag =RubyCursorIdentifier()"
nnoremap <buffer> <silent>  :exe  v:count1."tag =RubyCursorIdentifier()"
nmap <buffer> [f <Plug>RailsAlternate
nmap <buffer> ]f <Plug>RailsRelated
nmap <buffer> gf <Plug>RailsFind
nnoremap <buffer> <silent> g] :exe       "tselect =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g :exe         "tjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent> <Plug>RailsTabFind :RTfind
nnoremap <buffer> <silent> <Plug>RailsVSplitFind :RVfind
nnoremap <buffer> <silent> <Plug>RailsSplitFind :RSfind
nnoremap <buffer> <silent> <Plug>RailsFind :REfind
nnoremap <buffer> <silent> <Plug>RailsRelated :R
nnoremap <buffer> <silent> <Plug>RailsAlternate :A
cnoremap <buffer> <expr>  fugitive#buffer().rev()
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal noautoindent
setlocal balloonexpr=RubyBalloonexpr()
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=:#
setlocal commentstring=#\ %s
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=syntaxcomplete#Complete
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
set cursorline
setlocal cursorline
setlocal define=^\\s*def\\s\\+\\(self\\.\\)\\=\\|^\\s*test\\s*['\"]
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'ruby'
setlocal filetype=ruby
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=9
setlocal foldmarker={{{,}}}
set foldmethod=syntax
setlocal foldmethod=syntax
setlocal foldminlines=1
setlocal foldnestmax=20
set foldtext=CleanFoldText()
setlocal foldtext=CleanFoldText()
setlocal formatexpr=
setlocal formatoptions=croql
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=2
setlocal include=^\\s*\\<\\(load\\|w*require\\)\\>
setlocal includeexpr=RailsIncludeexpr()
setlocal indentexpr=GetRubyIndent()
setlocal indentkeys=0{,0},0),0],!^F,o,O,e,=end,=elsif,=when,=ensure,=rescue,==begin,==end
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255,-
setlocal keywordprg=ri\ -T
set linebreak
setlocal linebreak
setlocal nolisp
set list
setlocal list
setlocal nomacmeta
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal nonumber
setlocal numberwidth=4
setlocal omnifunc=rubycomplete#Complete
setlocal path=.,~/sandbox/work/vm/rpx/ruby/rails,~/sandbox/work/vm/rpx/ruby/rails/app,~/sandbox/work/vm/rpx/ruby/rails/app/models,~/sandbox/work/vm/rpx/ruby/rails/app/controllers,~/sandbox/work/vm/rpx/ruby/rails/app/helpers,~/sandbox/work/vm/rpx/ruby/rails/config,~/sandbox/work/vm/rpx/ruby/rails/lib,~/sandbox/work/vm/rpx/ruby/rails/app/views,~/sandbox/work/vm/rpx/ruby/rails/test,~/sandbox/work/vm/rpx/ruby/rails/test/unit,~/sandbox/work/vm/rpx/ruby/rails/test/functional,~/sandbox/work/vm/rpx/ruby/rails/test/integration,~/sandbox/work/vm/rpx/ruby/rails/app/*,~/sandbox/work/vm/rpx/ruby/rails/vendor,~/sandbox/work/vm/rpx/ruby/rails/vendor/plugins/*/lib,~/sandbox/work/vm/rpx/ruby/rails/vendor/plugins/*/test,~/sandbox/work/vm/rpx/ruby/rails/vendor/rails/*/lib,~/sandbox/work/vm/rpx/ruby/rails/vendor/rails/*/test,/Library/Ruby/Site/1.8,/Library/Ruby/Site/1.8/powerpc-darwin10.0,/Library/Ruby/Site/1.8/universal-darwin10.0,/Library/Ruby/Site,/System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/vendor_ruby/1.8,/System/
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
set relativenumber
setlocal relativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=2
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=2
setlocal nospell
setlocal spellcapcheck=off
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=%<(%n)\ %m%y%{rails#statusline()}%r\ %f\ %=%-14.(%l,%c%V%)\ %P%{XPMautoUpdate(\"statusline\")}
setlocal suffixesadd=.rb,.rhtml,.erb,.rxml,.builder,.rjs,.mab,.liquid,.haml,.dryml,.mn,.yml,.csv,.rake,s.rb
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'ruby'
setlocal syntax=ruby
endif
setlocal tabstop=8
setlocal tags=~/sandbox/work/vm/rpx/ruby/rails/tmp/tags,./tags,tags,~/sandbox/personal/tags,~/.vim/tags,~/sandbox/work/vm/rpx/ruby/.git/ruby.tags,~/sandbox/work/vm/rpx/ruby/.git/tags,~/sandbox/work/vm/rpx/ruby/rails/tags
setlocal textwidth=0
setlocal thesaurus=
setlocal noundofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
6
normal zo
266
normal zo
359
normal zo
360
normal zo
361
normal zo
361
normal zo
361
normal zo
361
normal zo
360
normal zo
359
normal zo
6
normal zo
let s:l = 340 - ((0 * winheight(0) + 47) / 94)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
340
normal! 0
lcd ~/sandbox/work/vm/rpx/ruby/rails
wincmd w
wincmd =
tabnext 2
if exists('s:wipebuf')
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToOIA
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
