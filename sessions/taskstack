let SessionLoad = 1
if &cp | set nocp | endif
let s:cpo_save=&cpo
set cpo&vim
imap <D-BS> 
imap <M-BS> 
imap <M-Down> }
inoremap <D-Down> <C-End>
imap <M-Up> {
inoremap <D-Up> <C-Home>
noremap! <M-Right> <C-Right>
noremap! <D-Right> <End>
noremap! <M-Left> <C-Left>
noremap! <D-Left> <Home>
inoremap <silent> <S-Tab> =BackwardsSnippet()
inoremap <C-Tab> 	
imap <F1> 
imap <Nul> :
map! <D-v> *
nmap <silent>  l:call AccordionMode()
snoremap <silent> 	 i<Right>=TriggerSnippet()
nmap <silent> <NL> j:call AccordionMode()
nmap <silent>  k:call AccordionMode()
nnoremap <silent>  :call Reset() | nohls
snoremap  b<BS>
nmap <silent>  h:call AccordionMode()
nmap   
snoremap % b<BS>%
snoremap ' b<BS>'
nnoremap :: q:
nnoremap <silent> K :e:$
nnoremap O :call vimwiki_lst#insertOo('O')a
map Q gq
xmap S <Plug>VSurround
nnoremap SS :w:SessionSave:call FixSession():SessionOpenLast:echo "Saved fixed session: " . v:this_session
snoremap U b<BS>U
vmap [% [%m'gv``
map <silent> \ww <Plug>VimwikiGoHome
map <silent> \wt <Plug>VimwikiTabGoHome
map <silent> \ws <Plug>VimwikiUISelect
nnoremap <silent> \- :silent g/^done {{/call FoldUnfolded()
snoremap \ b<BS>\
nmap \cv <Plug>VCSVimDiff
nmap \cu <Plug>VCSUpdate
nmap \cU <Plug>VCSUnlock
nmap \cs <Plug>VCSStatus
nmap \cr <Plug>VCSReview
nmap \cq <Plug>VCSRevert
nmap \cl <Plug>VCSLog
nmap \cL <Plug>VCSLock
nmap \ci <Plug>VCSInfo
nmap \cg <Plug>VCSGotoOriginal
nmap \cd <Plug>VCSDiff
nmap \cD <Plug>VCSDelete
nmap \cc <Plug>VCSCommit
nmap \cG <Plug>VCSClearAndGotoOriginal
nmap \cn <Plug>VCSAnnotate
nmap \ca <Plug>VCSAdd
map \dk <Plug>DirDiffPrev
map \dj <Plug>DirDiffNext
map \dp <Plug>DirDiffPut
map \dg <Plug>DirDiffGet
map <silent> \w2 :w:VimwikiAll2HTML:echo "Saved wiki to HTML."
map <silent> \snip :call ResetSnippets() | call GetSnippets(g:snippets_dir, &ft):echo "Snippets for format \"" . &ft . "\" updated."
nnoremap <silent> \ll o:call Timestamp("short") | call FoldWrap()
nnoremap <silent> \fi :call FoldInsert()
nnoremap <silent> \fw :call FoldWrap()
nnoremap <silent> \sl :call Timestamp("long")
nnoremap <silent> \st :call Timestamp("short")
nnoremap <silent> \sd :call Timestamp("date")
nnoremap \p+ :tab help 
nnoremap \pp :help:winc _:winc |:help 
nnoremap \_ Bi<em>ea</em>
nnoremap <silent> \q :call FormatSqlStatement()
nnoremap <silent> \t :call HandleTS()
nnoremap <silent> \\ :call HandleURI()
nnoremap <silent> \c :call ScratchBuffer("scratch")
nmap <silent> \0 :silent normal zvzt
nmap <silent> \= :call FoldDefaultNodes():normal zvzkzjzt
nnoremap <silent> \] :NERDTreeToggle
nnoremap \j :call JournalEntry()
nnoremap <silent> \w :!wc -w %
vmap ]% ]%m'gv``
snoremap ^ b<BS>^
snoremap ` b<BS>`
vmap a% [%v]%
nmap cs <Plug>Csurround
nmap ds <Plug>Dsurround
nmap gx <Plug>NetrwBrowseX
nnoremap o :call vimwiki_lst#insertOo('o')a
xmap s <Plug>Vsurround
nmap ySS <Plug>YSsurround
nmap ySs <Plug>YSsurround
nmap yss <Plug>Yssurround
nmap yS <Plug>YSurround
nmap ys <Plug>Ysurround
nnoremap <C-Down> :silent! :call AdjustFont(-1)
nnoremap <C-Up> :silent! :call AdjustFont(1)
nnoremap <silent> <C-Right> gt
nnoremap <silent> <C-Left> gT
nmap <silent> <D-w> :bd
nmap <silent> <D-t> :101tabnew
map <M-Down> }
noremap <D-Down> <C-End>
map <M-Up> {
noremap <D-Up> <C-Home>
noremap <M-Right> <C-Right>
noremap <D-Right> <End>
noremap <M-Left> <C-Left>
noremap <D-Left> <Home>
snoremap <Left> bi
snoremap <Right> a
snoremap <BS> b<BS>
snoremap <silent> <S-Tab> i<Right>=BackwardsSnippet()
nnoremap <silent> <Plug>NetrwBrowseX :call netrw#NetrwBrowseX(expand("<cWORD>"),0)
nnoremap <silent> <Plug>CVSWatchRemove :CVSWatch remove
nnoremap <silent> <Plug>CVSWatchOn :CVSWatch on
nnoremap <silent> <Plug>CVSWatchOff :CVSWatch off
nnoremap <silent> <Plug>CVSWatchAdd :CVSWatch add
nnoremap <silent> <Plug>CVSWatchers :CVSWatchers
nnoremap <silent> <Plug>CVSUnedit :CVSUnedit
nnoremap <silent> <Plug>CVSEditors :CVSEditors
nnoremap <silent> <Plug>CVSEdit :CVSEdit
nnoremap <silent> <Plug>VCSVimDiff :VCSVimDiff
nnoremap <silent> <Plug>VCSUpdate :VCSUpdate
nnoremap <silent> <Plug>VCSUnlock :VCSUnlock
nnoremap <silent> <Plug>VCSStatus :VCSStatus
nnoremap <silent> <Plug>VCSReview :VCSReview
nnoremap <silent> <Plug>VCSRevert :VCSRevert
nnoremap <silent> <Plug>VCSLog :VCSLog
nnoremap <silent> <Plug>VCSLock :VCSLock
nnoremap <silent> <Plug>VCSInfo :VCSInfo
nnoremap <silent> <Plug>VCSClearAndGotoOriginal :VCSGotoOriginal!
nnoremap <silent> <Plug>VCSGotoOriginal :VCSGotoOriginal
nnoremap <silent> <Plug>VCSDiff :VCSDiff
nnoremap <silent> <Plug>VCSDelete :VCSDelete
nnoremap <silent> <Plug>VCSCommit :VCSCommit
nnoremap <silent> <Plug>VCSAnnotate :VCSAnnotate
nnoremap <silent> <Plug>VCSAdd :VCSAdd
map <M-F3> :call CSV_clear_all()  
map <S-F3> :call CSV_toggle_field(CSV_get_field(0))
map <S-F5> :call CSV_goto_highlighted(-1)
map <S-F6> :call CSV_goto_highlighted(1)
map <C-F5> :call CSV_goto_field()
map <C-F6> :call CSV_get_new_sep()
map <silent> <C-S-Tab> :BufExplorerk
map <silent> <C-Tab> :BufExplorerj
nmap <silent> <C--> :call AccordionMode()
nnoremap <Down> :echo "You should have typed j instead"
nnoremap <Up> :echo "You should have typed k instead"
nnoremap <Right> :echo "You should have typed l instead"
nnoremap <Left> :echo "You should have typed h instead"
nmap <S-Space> 
map <F1> 
nnoremap <Nul> :
xmap <BS> "-d
vmap <D-x> "*d
vmap <D-c> "*y
vmap <D-v> "-d"*P
nmap <D-v> "*P
imap S <Plug>ISurround
imap s <Plug>Isurround
inoremap <silent> 	 =TriggerSnippet()
imap <silent>  :call Reset() | nohlsa
inoremap <expr>  vimwiki_lst#insertCR()
inoremap  :set completeopt+=menuonea
inoremap <silent> 	 =ShowAvailableSnips()
imap  <Plug>Isurround
imap  =CtrlXPP()
let &cpo=s:cpo_save
unlet s:cpo_save
set autoindent
set autowrite
set autowriteall
set background=dark
set backspace=indent,eol,start
set clipboard=unnamed
set diffopt=filler,vertical
set directory=~/.vim/swap//,~/vimfiles/swap//
set fileencodings=ucs-bom,utf-8,default,latin1
set fuoptions=maxhorz,maxvert
set guifont=Inconsolata:h11
set guioptions=egmrLt
set guitablabel=%m\ %N\ %t\ %r
set helplang=en
set history=10000
set hlsearch
set incsearch
set indentkeys=0{,0},0),:,!^F,O,e,*<Return>,=*/
set iskeyword=@,48-57,_,192-255,-
set langmenu=none
set laststatus=2
set listchars=tab:>-,trail:-
set mouse=a
set printexpr=system('open\ -a\ Preview\ '.v:fname_in)\ +\ v:shell_error
set ruler
set sessionoptions=folds,help,options,tabpages,winsize,globals,sesdir,resize,winpos,unix
set shiftwidth=4
set shortmess=filnxtToOIA
set showbreak=\ \ 
set showcmd
set spellcapcheck=off
set splitbelow
set splitright
set statusline=%<(%n)\ %m%y%r\ %f\ %=%-14.(%l,%c%V%)\ %P
set switchbuf=useopen,usetab
set tabline=%!MyTabLine()
set tabpagemax=100
set tabstop=4
set tags=./tags,tags,~/sandbox/personal/tags
set termencoding=utf-8
set transparency=5
set undolevels=100
set updatetime=500
set window=68
set winheight=10
set winminheight=0
set nowritebackup
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
let NERDTreeMapPreviewSplit = "gi"
let NERDTreeMapCloseChildren = "X"
let NERDTreeShowHidden = "0"
let TailMinusF_Loaded =  1 
let SuperTabLongestHighlight =  0 
let NERDTreeMapCloseDir = "x"
let SuperTabMappingTabLiteral = "<c-tab>"
let NERDTreeShowLineNumbers = "0"
let DirDiffSort =  1 
let NERDTreeBookmarksFile = "/Users/seth/.NERDTreeBookmarks"
let SuperTabDefaultCompletionType = "<c-p>"
let NERDTreeMapToggleHidden = "I"
let NERDTreeWinSize = "31"
let DirDiffInteractive =  0 
let NERDTreeMapPreview = "go"
let NERDTreeMapActivateNode = "o"
let NERDTreeWinPos = "left"
let DirDiffAddArgs = ""
let NERDTreeStatusline = "%{b:NERDTreeRoot.path.strForOS(0)}"
let NERDTreeMapOpenInTabSilent = "T"
let NERDTreeMapHelp = "?"
let NERDTreeMapJumpParent = "p"
let NERDTreeMapToggleFilters = "f"
let SuperTabMappingForward = "<tab>"
let NERDTreeMapJumpLastChild = "J"
let SuperTabContextDefaultCompletionType = "<c-p>"
let SuperTabRetainCompletionType =  1 
let NERDTreeMapJumpPrevSibling = "<C-k>"
let NERDTreeShowBookmarks = "0"
let NERDTreeRemoveDirCmd = "rm -rf "
let CSV_string_delimiter = "\""
let NERDTreeMouseMode = "1"
let NERDTreeChDirMode = "0"
let NERDTreeAutoCenterThreshold = "3"
let NERDTreeShowFiles = "1"
let NERDTreeMapOpenSplit = "i"
let DirDiffTextFiles = "Files "
let NERDTreeCaseSensitiveSort = "0"
let NERDTreeHijackNetrw = "1"
let NERDTreeMapFilesystemMenu = "m"
let NERDTreeMapRefresh = "r"
let TailMinusF_Height =  10 
let NERDTreeHighlightCursorline = "1"
let CSV_field_list = ""
let NERDTreeMapOpenInTab = "t"
let CSV_separator = ","
let DirDiffExcludes = ""
let DirDiffDynamicDiffText =  0 
let NERDTreeMapPreviewVSplit = "gs"
let NERDChristmasTree = "1"
let NERDTreeNotificationThreshold = "100"
let CSV_mono =  0 
let DirDiffTextDiffer = " differ"
let BufExplorer_title = "[Buf List]"
let NERDTreeMapChdir = "cd"
let DirDiffWindowSize =  14 
let NERDTreeMapExecute = "!"
let NERDTreeMapRefreshRoot = "R"
let NERDTreeAutoCenter = "1"
let DirDiffTextOnlyIn = "Only in "
let TailMinusF_Center_Win =  0 
let DirDiffTextAnd = " and "
let NERDTreeMapOpenVSplit = "s"
let NERDTreeMapDeleteBookmark = "D"
let AutoHiVersion = "0.2"
let NERDTreeMapJumpNextSibling = "<C-j>"
let DirDiffIgnoreCase =  0 
let NERDTreeMapJumpRoot = "P"
let NERDTreeCopyCmd = "cp -r "
let NERDTreeMapQuit = "q"
let NERDTreeMapChangeRoot = "C"
let NERDTreeSortDirs = "1"
let NERDTreeMapToggleFiles = "F"
let DirDiffIgnore = ""
let SuperTabMidWordCompletion =  1 
let NERDTreeMapOpenExpl = "e"
let NERDTreeMapJumpFirstChild = "K"
let NERDTreeMapOpenRecursively = "O"
let NERDTreeMapToggleBookmarks = "B"
let SuperTabMappingBackward = "<s-tab>"
let NERDTreeMapUpdir = "u"
let NERDTreeMapUpdirKeepOpen = "U"
let NERDTreeQuitOnOpen = "0"
silent only
exe "cd " . escape(expand("<sfile>:p:h"), ' ')
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +428 ~/sandbox/personal/todo/personal.tst.txt
badd +30 ~/sandbox/personal/todo/todo.txt
badd +1 ~/sandbox/personal/todo/techtodo.txt
silent! argdel *
set lines=69 columns=115
winpos 0 0
edit ~/sandbox/personal/todo/personal.tst.txt
set splitbelow splitright
wincmd _ | wincmd |
split
wincmd _ | wincmd |
split
2wincmd k
wincmd w
wincmd w
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
wincmd t
set winheight=1 winwidth=1
exe '1resize ' . ((&lines * 21 + 34) / 69)
exe '2resize ' . ((&lines * 23 + 34) / 69)
exe '3resize ' . ((&lines * 21 + 34) / 69)
exe 'vert 3resize ' . ((&columns * 57 + 57) / 115)
exe '4resize ' . ((&lines * 21 + 34) / 69)
exe 'vert 4resize ' . ((&columns * 57 + 57) / 115)
argglobal
let s:cpo_save=&cpo
set cpo&vim
nmap <buffer> <NL> ddp
nmap <buffer>  ddkP
nnoremap <buffer> LL :silent! call FindNode("SCRATCH")zo]zO
nnoremap <buffer> NN ggzoo-a 
nnoremap <buffer> QQ :silent! call InsertItem(getline("."), "o")
nnoremap <buffer> XX :silent! call InsertItem(getline("."), "x")
nnoremap <buffer> ZZ :maca hide:
imap <buffer> NN NN
imap <buffer> QQ QQ
imap <buffer> XX XX
imap <buffer> ZZ ZZ
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal noautoindent
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal comments=s1:/*,mb:*,ex:*/,://,b:#,:%,:XCOMM,n:>,fb:-
setlocal commentstring=
setlocal complete=.,w,b,u,t,i
setlocal completefunc=
setlocal nocopyindent
setlocal nocursorcolumn
set cursorline
setlocal cursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal noexpandtab
if &filetype != 'tst.txt'
setlocal filetype=tst.txt
endif
set foldcolumn=4
setlocal foldcolumn=4
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=2
setlocal foldmarker={{{,}}}
set foldmethod=marker
setlocal foldmethod=marker
setlocal foldminlines=1
setlocal foldnestmax=20
set foldtext=MyFoldText()
setlocal foldtext=MyFoldText()
setlocal formatexpr=
setlocal formatoptions=tcq
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=2
setlocal include=
setlocal includeexpr=
setlocal indentexpr=
setlocal indentkeys=0{,0},0),:,!^F,O,e,*<Return>,=*/
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255,-
setlocal keywordprg=
set linebreak
setlocal linebreak
setlocal nolisp
setlocal nolist
setlocal nomacmeta
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=0
setlocal nospell
setlocal spellcapcheck=off
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'tst.txt'
setlocal syntax=tst.txt
endif
setlocal tabstop=2
setlocal tags=
setlocal textwidth=0
setlocal thesaurus=
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
let s:l = 11 - ((10 * winheight(0) + 10) / 21)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
11
normal! 022l
wincmd w
argglobal
edit ~/sandbox/personal/todo/personal.tst.txt
let s:cpo_save=&cpo
set cpo&vim
nmap <buffer> <NL> ddp
nmap <buffer>  ddkP
nnoremap <buffer> LL :silent! call FindNode("SCRATCH")zo]zO
nnoremap <buffer> NN ggzoo-a 
nnoremap <buffer> QQ :silent! call InsertItem(getline("."), "o")
nnoremap <buffer> XX :silent! call InsertItem(getline("."), "x")
nnoremap <buffer> ZZ :maca hide:
imap <buffer> NN NN
imap <buffer> QQ QQ
imap <buffer> XX XX
imap <buffer> ZZ ZZ
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal noautoindent
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal comments=s1:/*,mb:*,ex:*/,://,b:#,:%,:XCOMM,n:>,fb:-
setlocal commentstring=
setlocal complete=.,w,b,u,t,i
setlocal completefunc=
setlocal nocopyindent
setlocal nocursorcolumn
set cursorline
setlocal cursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal noexpandtab
if &filetype != 'tst.txt'
setlocal filetype=tst.txt
endif
set foldcolumn=4
setlocal foldcolumn=4
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=2
setlocal foldmarker={{{,}}}
set foldmethod=marker
setlocal foldmethod=marker
setlocal foldminlines=1
setlocal foldnestmax=20
set foldtext=MyFoldText()
setlocal foldtext=MyFoldText()
setlocal formatexpr=
setlocal formatoptions=tcq
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=2
setlocal include=
setlocal includeexpr=
setlocal indentexpr=
setlocal indentkeys=0{,0},0),:,!^F,O,e,*<Return>,=*/
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255,-
setlocal keywordprg=
set linebreak
setlocal linebreak
setlocal nolisp
setlocal nolist
setlocal nomacmeta
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=0
setlocal nospell
setlocal spellcapcheck=off
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'tst.txt'
setlocal syntax=tst.txt
endif
setlocal tabstop=2
setlocal tags=
setlocal textwidth=0
setlocal thesaurus=
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
1
normal zo
7
normal zc
21
normal zc
26
normal zc
34
normal zc
44
normal zc
51
normal zc
55
normal zc
60
normal zc
66
normal zc
75
normal zc
81
normal zc
85
normal zc
92
normal zc
97
normal zc
103
normal zc
114
normal zc
124
normal zc
130
normal zc
136
normal zc
163
normal zc
169
normal zc
176
normal zc
184
normal zc
197
normal zc
201
normal zc
208
normal zc
225
normal zc
247
normal zc
261
normal zc
267
normal zc
275
normal zc
284
normal zc
342
normal zo
355
normal zo
355
normal zo
let s:l = 460 - ((0 * winheight(0) + 11) / 23)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
460
normal! 02l
wincmd w
argglobal
edit ~/sandbox/personal/todo/techtodo.txt
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal comments=s1:/*,mb:*,ex:*/,://,b:#,:%,:XCOMM,n:>,fb:-
setlocal commentstring=
setlocal complete=.,w,b,u,t,i
setlocal completefunc=
setlocal nocopyindent
setlocal nocursorcolumn
set cursorline
setlocal cursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal noexpandtab
if &filetype != 'txt'
setlocal filetype=txt
endif
set foldcolumn=4
setlocal foldcolumn=4
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=4
setlocal foldmarker={{{,}}}
set foldmethod=marker
setlocal foldmethod=marker
setlocal foldminlines=1
setlocal foldnestmax=20
set foldtext=MyFoldText()
setlocal foldtext=MyFoldText()
setlocal formatexpr=
setlocal formatoptions=tcq
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=2
setlocal include=
setlocal includeexpr=
setlocal indentexpr=
setlocal indentkeys=0{,0},0),:,!^F,O,e,*<Return>,=*/
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255,-
setlocal keywordprg=
set linebreak
setlocal linebreak
setlocal nolisp
setlocal nolist
setlocal nomacmeta
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal readonly
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=0
setlocal nospell
setlocal spellcapcheck=off
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'txt'
setlocal syntax=txt
endif
setlocal tabstop=2
setlocal tags=
setlocal textwidth=0
setlocal thesaurus=
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
19
normal zo
20
normal zc
31
normal zc
67
normal zc
71
normal zc
76
normal zc
82
normal zc
87
normal zc
91
normal zc
107
normal zc
115
normal zc
129
normal zc
158
normal zc
162
normal zc
166
normal zc
19
normal zo
173
normal zo
175
normal zc
187
normal zo
188
normal zo
188
normal zc
209
normal zc
187
normal zo
215
normal zo
228
normal zc
215
normal zo
250
normal zc
264
normal zc
173
normal zo
280
normal zo
302
normal zc
309
normal zc
314
normal zc
280
normal zo
333
normal zo
351
normal zc
356
normal zc
359
normal zc
362
normal zc
369
normal zc
376
normal zc
382
normal zc
388
normal zc
333
normal zo
402
normal zo
436
normal zc
402
normal zo
456
normal zo
485
normal zc
456
normal zo
490
normal zo
491
normal zc
496
normal zc
501
normal zc
509
normal zc
516
normal zo
516
normal zc
490
normal zo
547
normal zo
549
normal zc
547
normal zo
553
normal zo
571
normal zc
553
normal zo
582
normal zo
597
normal zc
582
normal zo
601
normal zo
601
normal zc
618
normal zo
618
normal zc
let s:l = 204 - ((0 * winheight(0) + 10) / 21)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
204
normal! 02l
wincmd w
argglobal
edit ~/sandbox/personal/todo/todo.txt
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal comments=s1:/*,mb:*,ex:*/,://,b:#,:%,:XCOMM,n:>,fb:-
setlocal commentstring=
setlocal complete=.,w,b,u,t,i
setlocal completefunc=
setlocal nocopyindent
setlocal nocursorcolumn
set cursorline
setlocal cursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal noexpandtab
if &filetype != 'txt'
setlocal filetype=txt
endif
set foldcolumn=4
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=4
setlocal foldmarker={{{,}}}
set foldmethod=marker
setlocal foldmethod=marker
setlocal foldminlines=1
setlocal foldnestmax=20
set foldtext=MyFoldText()
setlocal foldtext=MyFoldText()
setlocal formatexpr=
setlocal formatoptions=tcq
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=2
setlocal include=
setlocal includeexpr=
setlocal indentexpr=
setlocal indentkeys=0{,0},0),:,!^F,O,e,*<Return>,=*/
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255,-
setlocal keywordprg=
set linebreak
setlocal linebreak
setlocal nolisp
setlocal nolist
setlocal nomacmeta
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal readonly
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=0
setlocal nospell
setlocal spellcapcheck=off
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'txt'
setlocal syntax=txt
endif
setlocal tabstop=2
setlocal tags=
setlocal textwidth=0
setlocal thesaurus=
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
1
normal zo
2
normal zc
1
normal zo
30
normal zo
71
normal zc
129
normal zo
130
normal zo
130
normal zc
129
normal zo
165
normal zo
179
normal zc
165
normal zo
190
normal zo
210
normal zo
211
normal zc
210
normal zo
225
normal zo
231
normal zc
244
normal zc
225
normal zo
190
normal zo
254
normal zo
254
normal zc
275
normal zo
276
normal zc
284
normal zo
284
normal zc
275
normal zo
312
normal zo
315
normal zc
312
normal zo
326
normal zc
30
normal zo
371
normal zo
372
normal zo
388
normal zc
372
normal zo
371
normal zo
472
normal zo
473
normal zc
485
normal zc
505
normal zc
510
normal zc
537
normal zc
472
normal zo
543
normal zo
557
normal zc
543
normal zo
569
normal zo
570
normal zc
605
normal zc
569
normal zo
666
normal zo
678
normal zc
666
normal zo
708
normal zo
709
normal zc
712
normal zo
712
normal zc
719
normal zc
723
normal zc
726
normal zo
726
normal zc
734
normal zo
734
normal zc
751
normal zc
708
normal zo
755
normal zo
755
normal zc
let s:l = 30 - ((10 * winheight(0) + 10) / 21)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
30
normal! 0
wincmd w
4wincmd w
exe '1resize ' . ((&lines * 21 + 34) / 69)
exe '2resize ' . ((&lines * 23 + 34) / 69)
exe '3resize ' . ((&lines * 21 + 34) / 69)
exe 'vert 3resize ' . ((&columns * 57 + 57) / 115)
exe '4resize ' . ((&lines * 21 + 34) / 69)
exe 'vert 4resize ' . ((&columns * 57 + 57) / 115)
tabnext 1
if exists('s:wipebuf')
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=10 winwidth=20 shortmess=filnxtToOIA
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
