let SessionLoad = 1
if &cp | set nocp | endif
let s:cpo_save=&cpo
set cpo&vim
imap <silent> <Plug>IMAP_JumpForward =IMAP_Jumpfunc('', 0)
imap <silent> <Plug>IMAP_JumpBack =IMAP_Jumpfunc('b', 0)
imap <D-BS> 
imap <M-BS> 
imap <M-Down> }
inoremap <D-Down> <C-End>
imap <M-Up> {
inoremap <D-Up> <C-Home>
noremap! <M-Right> <C-Right>
noremap! <D-Right> <End>
noremap! <M-Left> <C-Left>
noremap! <D-Left> <Home>
inoremap <silent> <S-Tab> =BackwardsSnippet()
inoremap <silent> <Plug>NERDCommenterInInsert  <BS>:call NERDComment(0, "insert")
imap <F1> :Help
imap <Nul> :
map! <D-v> *
nnoremap <silent>  
nmap <silent> - :call AccordionMode()
nmap <silent> l l:call AccordionMode()
nmap <silent> h h:call AccordionMode()
nmap <silent> k k:call AccordionMode()
nmap <silent> j j:call AccordionMode()
nmap P :call SectionHeadNav(-1, 1)
nmap p :call SectionHeadNav(-1, 0)
nmap N :call SectionHeadNav(1, 1)
nmap n :call SectionHeadNav(1, 0)
nmap c :silent! lclose
nmap ? :call FunctionLocationIndex()
nmap / :call HeaderLocationIndex()
snoremap <silent> 	 i<Right>=TriggerSnippet()
nmap <NL> <Plug>IMAP_JumpForward
vmap <NL> <Plug>IMAP_JumpForward
nnoremap <silent>  :call Reset() | nohls
map  :PickHEX 
snoremap  b<BS>
nmap <silent>  :call AddOrUpdateTimestampSolicitingAnnotation()
nmap <silent>  :call RemoveTimestamp(g:timestamp_annotation)
nmap <silent>  :call RemoveTimestamp()
nmap <silent>  :call AddOrUpdateTimestampSolicitingAnnotation()
nmap <silent>  :call AddOrUpdateTimestamp("")
nmap <silent>  :call TimestampAutoUpdateToggle()
nmap  :call ReloadVimrc() | :echo "Resourced .vimrc."
snoremap % b<BS>%
snoremap ' b<BS>'
nmap ,ca <Plug>NERDCommenterAltDelims
vmap ,cA <Plug>NERDCommenterAppend
nmap ,cA <Plug>NERDCommenterAppend
vmap ,c$ <Plug>NERDCommenterToEOL
nmap ,c$ <Plug>NERDCommenterToEOL
vmap ,cu <Plug>NERDCommenterUncomment
nmap ,cu <Plug>NERDCommenterUncomment
vmap ,cn <Plug>NERDCommenterNest
nmap ,cn <Plug>NERDCommenterNest
vmap ,cb <Plug>NERDCommenterAlignBoth
nmap ,cb <Plug>NERDCommenterAlignBoth
vmap ,cl <Plug>NERDCommenterAlignLeft
nmap ,cl <Plug>NERDCommenterAlignLeft
vmap ,cy <Plug>NERDCommenterYank
nmap ,cy <Plug>NERDCommenterYank
vmap ,ci <Plug>NERDCommenterInvert
nmap ,ci <Plug>NERDCommenterInvert
vmap ,cs <Plug>NERDCommenterSexy
nmap ,cs <Plug>NERDCommenterSexy
vmap ,cm <Plug>NERDCommenterMinimal
nmap ,cm <Plug>NERDCommenterMinimal
vmap ,c  <Plug>NERDCommenterToggle
nmap ,c  <Plug>NERDCommenterToggle
vmap ,cc <Plug>NERDCommenterComment
nmap ,cc <Plug>NERDCommenterComment
nnoremap // q/
nnoremap :: q:
nmap :W :w
nnoremap ?? q?
nmap <silent> K :e:$
map Q gq
xmap S <Plug>VSurround
snoremap U b<BS>U
vmap [% [%m'gv``
snoremap \ b<BS>\
map <silent> \w\t <Plug>VimwikiTabMakeDiaryNote
map <silent> \w\w <Plug>VimwikiMakeDiaryNote
map <silent> \ws <Plug>VimwikiUISelect
map <silent> \wt <Plug>VimwikiTabGoHome
map <silent> \ww <Plug>VimwikiGoHome
nmap <silent> \cv <Plug>VCSVimDiff
nmap <silent> \cu <Plug>VCSUpdate
nmap <silent> \cU <Plug>VCSUnlock
nmap <silent> \cs <Plug>VCSStatus
nmap <silent> \cr <Plug>VCSReview
nmap <silent> \cq <Plug>VCSRevert
nmap <silent> \cn <Plug>VCSAnnotate
nmap <silent> \cN <Plug>VCSSplitAnnotate
nmap <silent> \cl <Plug>VCSLog
nmap <silent> \cL <Plug>VCSLock
nmap <silent> \ci <Plug>VCSInfo
nmap <silent> \cg <Plug>VCSGotoOriginal
nmap <silent> \cG <Plug>VCSClearAndGotoOriginal
nmap <silent> \cd <Plug>VCSDiff
nmap <silent> \cD <Plug>VCSDelete
nmap <silent> \cc <Plug>VCSCommit
nmap <silent> \ca <Plug>VCSAdd
map \dk <Plug>DirDiffPrev
map \dj <Plug>DirDiffNext
map \dp <Plug>DirDiffPut
map \dg <Plug>DirDiffGet
map <silent> \w2 :w:VimwikiAll2HTML:echo "Saved wiki to HTML."
map <silent> \snip :call ResetSnippets() | call GetSnippets(g:snippets_dir, "_") | call GetSnippets(g:snippets_dir, &ft):echo "Snippets for format \"" . &ft . "\" updated."
nmap <silent> \ll o:call Timestamp("short") | call FoldWrap()
nmap <silent> \fi :call FoldInsert()
nmap <silent> \fw :call FoldWrap()
nmap <silent> \sl :call Timestamp("long")
nmap <silent> \sd :call Timestamp("date")
nmap \hg :HelpGrep
nmap \pp :help:winc _:winc |:help 
nmap \hw :help:silent call AdjustFont(-4):set columns=115 lines=999:winc _:winc |:help 
nmap \_ Bi<em>ea</em>
nmap <silent> \q :call FormatSqlStatement()
nmap <silent> \t :call HandleTS()
nmap <silent> \/ :call HandleURI()
nmap <silent> \c :call ScratchBuffer("scratch")
nmap <silent> \0 :silent normal zvzt
nmap <silent> \= :call FoldDefaultNodes():normal zvzkzjzt
nmap <silent> \] :NERDTreeToggle
nmap <silent> \j :call HandleMantis()
nmap \\ :call CommitSession()
nmap <silent> \w :!wc -w %
vmap ]% ]%m'gv``
snoremap ^ b<BS>^
snoremap ` b<BS>`
vmap a% [%v]%
nmap cs <Plug>Csurround
nmap ds <Plug>Dsurround
nmap gx <Plug>NetrwBrowseX
xmap s <Plug>Vsurround
nmap ySS <Plug>YSsurround
nmap ySs <Plug>YSsurround
nmap yss <Plug>Yssurround
nmap yS <Plug>YSurround
nmap ys <Plug>Ysurround
nmap <silent> <Plug>IMAP_JumpForward i=IMAP_Jumpfunc('', 0)
nmap <silent> <Plug>IMAP_JumpBack i=IMAP_Jumpfunc('b', 0)
vmap <silent> <Plug>IMAP_DeleteAndJumpForward "_<Del>i=IMAP_Jumpfunc('', 0)
vmap <silent> <Plug>IMAP_DeleteAndJumpBack "_<Del>i=IMAP_Jumpfunc('b', 0)
vmap <silent> <Plug>IMAP_JumpForward i=IMAP_Jumpfunc('', 0)
vmap <silent> <Plug>IMAP_JumpBack `<i=IMAP_Jumpfunc('b', 0)
nnoremap <C-Down> :silent! :call AdjustFont(-1)
nnoremap <C-Up> :silent! :call AdjustFont(1)
nnoremap <silent> <C-Right> gt
nnoremap <silent> <C-Left> gT
nmap <silent> <D-w> :bd
nmap <silent> <D-t> :101tabnew
map <M-Down> }
noremap <D-Down> <C-End>
map <M-Up> {
noremap <D-Up> <C-Home>
noremap <M-Right> <C-Right>
noremap <D-Right> <End>
noremap <M-Left> <C-Left>
noremap <D-Left> <Home>
snoremap <Left> bi
snoremap <Right> a
snoremap <BS> b<BS>
snoremap <silent> <S-Tab> i<Right>=BackwardsSnippet()
nnoremap <silent> <Plug>NetrwBrowseX :call netrw#NetrwBrowseX(expand("<cWORD>"),0)
nnoremap <silent> <Plug>CVSWatchRemove :CVSWatch remove
nnoremap <silent> <Plug>CVSWatchOn :CVSWatch on
nnoremap <silent> <Plug>CVSWatchOff :CVSWatch off
nnoremap <silent> <Plug>CVSWatchAdd :CVSWatch add
nnoremap <silent> <Plug>CVSWatchers :CVSWatchers
nnoremap <silent> <Plug>CVSUnedit :CVSUnedit
nnoremap <silent> <Plug>CVSEditors :CVSEditors
nnoremap <silent> <Plug>CVSEdit :CVSEdit
nnoremap <silent> <Plug>VCSVimDiff :VCSVimDiff
nnoremap <silent> <Plug>VCSUpdate :VCSUpdate
nnoremap <silent> <Plug>VCSUnlock :VCSUnlock
nnoremap <silent> <Plug>VCSStatus :VCSStatus
nnoremap <silent> <Plug>VCSSplitAnnotate :VCSAnnotate!
nnoremap <silent> <Plug>VCSReview :VCSReview
nnoremap <silent> <Plug>VCSRevert :VCSRevert
nnoremap <silent> <Plug>VCSLog :VCSLog
nnoremap <silent> <Plug>VCSLock :VCSLock
nnoremap <silent> <Plug>VCSInfo :VCSInfo
nnoremap <silent> <Plug>VCSClearAndGotoOriginal :VCSGotoOriginal!
nnoremap <silent> <Plug>VCSGotoOriginal :VCSGotoOriginal
nnoremap <silent> <Plug>VCSDiff :VCSDiff
nnoremap <silent> <Plug>VCSDelete :VCSDelete
nnoremap <silent> <Plug>VCSCommit :VCSCommit
nnoremap <silent> <Plug>VCSAnnotate :VCSAnnotate
nnoremap <silent> <Plug>VCSAdd :VCSAdd
map <M-F3> :call CSV_clear_all()  
map <S-F3> :call CSV_toggle_field(CSV_get_field(0))
map <S-F5> :call CSV_goto_highlighted(-1)
map <S-F6> :call CSV_goto_highlighted(1)
map <C-F5> :call CSV_goto_field()
map <C-F6> :call CSV_get_new_sep()
nmap <silent> <Plug>NERDCommenterAppend :call NERDComment(0, "append")
nnoremap <silent> <Plug>NERDCommenterToEOL :call NERDComment(0, "toEOL")
vnoremap <silent> <Plug>NERDCommenterUncomment :call NERDComment(1, "uncomment")
nnoremap <silent> <Plug>NERDCommenterUncomment :call NERDComment(0, "uncomment")
vnoremap <silent> <Plug>NERDCommenterNest :call NERDComment(1, "nested")
nnoremap <silent> <Plug>NERDCommenterNest :call NERDComment(0, "nested")
vnoremap <silent> <Plug>NERDCommenterAlignBoth :call NERDComment(1, "alignBoth")
nnoremap <silent> <Plug>NERDCommenterAlignBoth :call NERDComment(0, "alignBoth")
vnoremap <silent> <Plug>NERDCommenterAlignLeft :call NERDComment(1, "alignLeft")
nnoremap <silent> <Plug>NERDCommenterAlignLeft :call NERDComment(0, "alignLeft")
vmap <silent> <Plug>NERDCommenterYank :call NERDComment(1, "yank")
nmap <silent> <Plug>NERDCommenterYank :call NERDComment(0, "yank")
vnoremap <silent> <Plug>NERDCommenterInvert :call NERDComment(1, "invert")
nnoremap <silent> <Plug>NERDCommenterInvert :call NERDComment(0, "invert")
vnoremap <silent> <Plug>NERDCommenterSexy :call NERDComment(1, "sexy")
nnoremap <silent> <Plug>NERDCommenterSexy :call NERDComment(0, "sexy")
vnoremap <silent> <Plug>NERDCommenterMinimal :call NERDComment(1, "minimal")
nnoremap <silent> <Plug>NERDCommenterMinimal :call NERDComment(0, "minimal")
vnoremap <silent> <Plug>NERDCommenterToggle :call NERDComment(1, "toggle")
nnoremap <silent> <Plug>NERDCommenterToggle :call NERDComment(0, "toggle")
vnoremap <silent> <Plug>NERDCommenterComment :call NERDComment(1, "norm")
nnoremap <silent> <Plug>NERDCommenterComment :call NERDComment(0, "norm")
map <silent> <C-S-Tab> :BufExplorerk
map <silent> <C-Tab> :BufExplorerj
nmap <Down> :echo "You should have typed j instead."
nmap <Up> :echo "You should have typed k instead."
nmap <Right> :echo "You should have typed l instead."
nmap <Left> :echo "You should have typed h instead."
nmap <S-Space> 
map <F1> :Help
nnoremap <Nul> :
xmap <BS> "-d
vmap <D-x> "*d
vmap <D-c> "*y
vmap <D-v> "-d"*P
nmap <D-v> "*P
imap S <Plug>ISurround
imap s <Plug>Isurround
inoremap <silent> 	 =TriggerSnippet()
imap <NL> <Plug>IMAP_JumpForward
imap <silent>  :call Reset() | nohlsa
inoremap  :set completeopt+=menuonea
inoremap <silent> 	 =ShowAvailableSnips()
imap  <Plug>Isurround
imap <silent>  :call TimestampAutoUpdateToggle()
imap <silent>  :call AddOrUpdateTimestamp("")a
imap <silent>  :call RemoveTimestamp("")a
imap   :call ReloadVimrc() | :echo "Resourced .vimrc."
let &cpo=s:cpo_save
unlet s:cpo_save
set autowrite
set background=dark
set backspace=indent,eol,start
set binary
set clipboard=unnamed
set commentstring=
set diffopt=filler,vertical
set directory=~/.vim/swap//,~/vimfiles/swap//
set display=lastline,uhex
set fileencodings=ucs-bom,utf-8,default,latin1
set foldlevelstart=999
set fuoptions=maxhorz,maxvert
set guifont=Inconsolata:h13
set guioptions=egmrLt
set guitablabel=%m\ %N\ %t\ %r
set helplang=en
set history=10000
set hlsearch
set incsearch
set indentkeys=0{,0},:,0#,!^F,O,e
set iskeyword=@,48-57,_,192-255,-
set langmenu=none
set laststatus=2
set listchars=tab:>-,trail:-
set mouse=a
set operatorfunc=<SNR>29_opfunc
set printexpr=system('open\ -a\ Preview\ '.v:fname_in)\ +\ v:shell_error
set ruler
set runtimepath=~/.vim,~/.vim/bundle/PickAColor,/Applications/Tasks.app/Contents/Resources/vim/vimfiles,/Applications/Tasks.app/Contents/Resources/vim/runtime,/Applications/Tasks.app/Contents/Resources/vim/vimfiles/after,~/.vim/after
set sessionoptions=folds,help,options,tabpages,winsize,globals,sesdir,resize,winpos,unix
set shiftwidth=4
set shortmess=filnxtToOIA
set showbreak=\ \ 
set showcmd
set spellcapcheck=off
set splitbelow
set splitright
set statusline=%<(%n)\ %m%y%r\ %f\ %=%-14.(%l,%c%V%)\ %P
set switchbuf=useopen,usetab
set tabline=%!MyTabLine()
set tabpagemax=100
set tabstop=4
set tags=./tags,tags,~/sandbox/personal/tags
set termencoding=utf-8
set undolevels=100
set window=69
set winminheight=0
set wrapmargin=120
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
let NERDTreeMapPreviewSplit = "gi"
let NERDTreeMapCloseChildren = "X"
let NERDTreeShowHidden = "0"
let ConqueTerm_EscKey = "<Esc>"
let TailMinusF_Loaded =  1 
let NERDSpaceDelims = "0"
let NERDTreeMapCloseDir = "x"
let ConqueTerm_Color =  1 
let ConqueTerm_Version =  120 
let NERDUsePlaceHolders = "1"
let NERDTreeShowLineNumbers = "0"
let DirDiffSort =  1 
let NERDTreeMapToggleHidden = "I"
let NERDTreeWinSize = "31"
let NERDTreeMapRefreshRoot = "R"
let DirDiffInteractive =  0 
let NERDTreeMapPreview = "go"
let NERDTreeMapActivateNode = "o"
let Imap_DeleteEmptyPlaceHolders =  1 
let NERDTreeWinPos = "left"
let DirDiffAddArgs = ""
let NERDTreeStatusline = "%{b:NERDTreeRoot.path.strForOS(0)}"
let NERDTreeMapOpenInTabSilent = "T"
let NERDTreeMapHelp = "?"
let NERDTreeMapJumpParent = "p"
let NERDTreeMapToggleFilters = "f"
let NERDTreeMapJumpLastChild = "J"
let NERDTreeMapJumpPrevSibling = "<C-k>"
let NERDTreeShowBookmarks = "0"
let NERDMenuMode = "3"
let NERDTreeMapOpenExpl = "e"
let CSV_string_delimiter = "\""
let NERDTreeMouseMode = "1"
let NERDDefaultNesting = "1"
let NERDTreeChDirMode = "0"
let NetrwMenuPriority =  80 
let NERDTreeRemoveDirCmd = "rm -rf "
let NERDTreeAutoCenterThreshold = "3"
let NERDTreeShowFiles = "1"
let NERDTreeMapOpenSplit = "i"
let DirDiffTextFiles = "Files "
let NERDTreeCaseSensitiveSort = "0"
let NERDTreeHijackNetrw = "1"
let NERDTreeMapFilesystemMenu = "m"
let NERDTreeMapRefresh = "r"
let CSV_field_list = ""
let TailMinusF_Height =  10 
let NERDTreeHighlightCursorline = "1"
let NERDDelimiterRequests = "1"
let NERDLPlace = "[>"
let NERDTreeMapOpenInTab = "t"
let CSV_separator = ","
let DirDiffExcludes = ""
let ConqueTerm_CloseOnEnd =  0 
let NERDCreateDefaultMappings = "1"
let ConqueTerm_InsertOnEnter =  0 
let DirDiffDynamicDiffText =  0 
let NERDTreeMapPreviewVSplit = "gs"
let NERDChristmasTree = "1"
let NERDTreeNotificationThreshold = "100"
let NERDCommentWholeLinesInVMode = "0"
let CSV_mono =  0 
let DirDiffTextDiffer = " differ"
let BufExplorer_title = "[Buf List]"
let NERDTreeMapChdir = "cd"
let NERDRPlace = "<]"
let DirDiffWindowSize =  14 
let NERDTreeMapExecute = "!"
let NERDRemoveExtraSpaces = "1"
let NERDRemoveAltComs = "1"
let NERDTreeAutoCenter = "1"
let DirDiffTextOnlyIn = "Only in "
let TailMinusF_Center_Win =  0 
let DirDiffTextAnd = " and "
let Imap_Debug =  0 
let NERDTreeMapOpenVSplit = "s"
let ConqueTerm_ReadUnfocused =  0 
let NERDTreeMapDeleteBookmark = "D"
let NERDBlockComIgnoreEmpty = "0"
let AutoHiVersion = "0.2"
let NERDTreeMapJumpNextSibling = "<C-j>"
let DirDiffIgnoreCase =  0 
let NERDTreeMapJumpRoot = "P"
let NERDTreeCopyCmd = "cp -r "
let ConqueTerm_SendVisKey = "<F9>"
let NERDTreeMapQuit = "q"
let Imap_StickyPlaceHolders =  1 
let NERDTreeMapChangeRoot = "C"
let NERDCompactSexyComs = "0"
let NERDTreeSortDirs = "1"
let ConqueTerm_TERM = "vt100"
let NERDTreeMapToggleFiles = "F"
let NERDAllowAnyVisualDelims = "1"
let ConqueTerm_CWInsert =  0 
let ConqueTerm_Idx =  0 
let DirDiffIgnore = ""
let ConqueTerm_PromptRegex = "^\\w\\+@[0-9A-Za-z_.-]\\+:[0-9A-Za-z_./\\~,:-]\\+\\$"
let BufExploreAdd =  1 
let NetrwTopLvlMenu = "Netrw."
let NERDTreeMapJumpFirstChild = "K"
let NERDTreeMapOpenRecursively = "O"
let NERDTreeMapToggleBookmarks = "B"
let NERDTreeBookmarksFile = "/Users/seth/.NERDTreeBookmarks"
let ConqueTerm_Loaded =  1 
let NERDTreeMapUpdir = "u"
let ConqueTerm_Syntax = "conque_term"
let NERDTreeMapUpdirKeepOpen = "U"
let NERDTreeQuitOnOpen = "0"
silent only
exe "cd " . escape(expand("<sfile>:p:h"), ' ')
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +25 ~/sandbox/personal/todo/personal.tst.txt
silent! argdel *
set lines=70 columns=115
winpos 840 1028
buffer ~/sandbox/personal/todo/personal.tst.txt
set splitbelow splitright
wincmd t
set winheight=1 winwidth=1
argglobal
let s:cpo_save=&cpo
set cpo&vim
imap <buffer> <silent> <D-0> :tabn 10
imap <buffer> <silent> <D-1> :tabn 1
imap <buffer> <silent> <D-2> :tabn 2
imap <buffer> <silent> <D-3> :tabn 3
imap <buffer> <silent> <D-4> :tabn 4
imap <buffer> <silent> <D-5> :tabn 5
imap <buffer> <silent> <D-6> :tabn 6
imap <buffer> <silent> <D-7> :tabn 7
imap <buffer> <silent> <D-8> :tabn 8
imap <buffer> <silent> <D-9> :tabn 9
nmap <buffer> <silent> 	 /^\([A-Z]\+ \)\{1,\}:nohls
nmap <buffer> <silent> <NL> :call TaskstackMoveItemDown()
nmap <buffer> <silent>  :call TaskstackMoveItemUp()
nmap <buffer> <silent>  /^@.* {\{3\}:nohls
nmap <buffer> <silent>  ?^@.* {\{3\}:nohls
nmap <buffer> $ :call TaskstackEOL()
nmap <buffer> :w :call TaskstackAutosaveReminder()
imap <buffer> <silent> ° :tabn 10
imap <buffer> <silent> ± :tabn 1
imap <buffer> <silent> ² :tabn 2
imap <buffer> <silent> ³ :tabn 3
imap <buffer> <silent> ´ :tabn 4
imap <buffer> <silent> µ :tabn 5
imap <buffer> <silent> ¶ :tabn 6
imap <buffer> <silent> · :tabn 7
imap <buffer> <silent> ¸ :tabn 8
imap <buffer> <silent> ¹ :tabn 9
nmap <buffer> LL :call TaskstackScratch()
nmap <buffer> NN :call TaskstackNewItem()
nmap <buffer> QQ :call TaskstackCompleteItem(g:completed_prefix)
nmap <buffer> XX :call TaskstackCompleteItem(g:aborted_prefix)
nmap <buffer> ZZ :call TaskstackHide()
nmap <buffer> <silent> <D-0> 10gt
nmap <buffer> <silent> <D-1> 1gt
nmap <buffer> <silent> <D-2> 2gt
nmap <buffer> <silent> <D-3> 3gt
nmap <buffer> <silent> <D-4> 4gt
nmap <buffer> <silent> <D-5> 5gt
nmap <buffer> <silent> <D-6> 6gt
nmap <buffer> <silent> <D-7> 7gt
nmap <buffer> <silent> <D-8> 8gt
nmap <buffer> <silent> <D-9> 9gt
nmap <buffer> <F8> :call TaskstackGroups()
nmap <buffer> <silent> <S-Tab> ?^\([A-Z]\+ \)\{1,\}:nohls
nmap <buffer> <silent> ° 10gt
nmap <buffer> <silent> ± 1gt
nmap <buffer> <silent> ² 2gt
nmap <buffer> <silent> ³ 3gt
nmap <buffer> <silent> ´ 4gt
nmap <buffer> <silent> µ 5gt
nmap <buffer> <silent> ¶ 6gt
nmap <buffer> <silent> · 7gt
nmap <buffer> <silent> ¸ 8gt
nmap <buffer> <silent> ¹ 9gt
imap <buffer> NN :call TaskstackNewItem()
imap <buffer> QQ :call TaskstackCompleteItem(g:completed_prefix)
imap <buffer> XX :call TaskstackCompleteItem(g:aborted_prefix)
imap <buffer> ZZ :call TaskstackHide()
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal noautoindent
setlocal balloonexpr=
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=s1:/*,mb:*,ex:*/,://,b:#,:%,:XCOMM,n:>,fb:-
setlocal commentstring=
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
set cursorline
setlocal cursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal noexpandtab
if &filetype != '_.txt.tst'
setlocal filetype=_.txt.tst
endif
set foldcolumn=4
setlocal foldcolumn=4
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=3
setlocal foldmarker={{{,}}}
set foldmethod=marker
setlocal foldmethod=marker
setlocal foldminlines=1
setlocal foldnestmax=20
set foldtext=MyFoldText()
setlocal foldtext=MyFoldText()
setlocal formatexpr=
setlocal formatoptions=tcq
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=2
setlocal include=
setlocal includeexpr=
setlocal indentexpr=
setlocal indentkeys=0{,0},:,0#,!^F,O,e
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255,-
setlocal keywordprg=
set linebreak
setlocal linebreak
setlocal nolisp
setlocal nolist
setlocal nomacmeta
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal nonumber
setlocal numberwidth=4
setlocal omnifunc=
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
set relativenumber
setlocal relativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=0
setlocal nospell
setlocal spellcapcheck=off
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != '_.txt.tst'
setlocal syntax=_.txt.tst
endif
setlocal tabstop=4
setlocal tags=
setlocal textwidth=0
setlocal thesaurus=
setlocal noundofile
set winfixheight
setlocal winfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
1
normal zo
4
normal zo
4
normal zo
8
normal zo
39
normal zo
58
normal zc
192
normal zo
1
normal zo
206
normal zc
214
normal zc
224
normal zc
228
normal zc
240
normal zc
247
normal zc
253
normal zc
258
normal zc
267
normal zc
280
normal zc
285
normal zc
291
normal zc
295
normal zc
304
normal zc
313
normal zc
321
normal zc
326
normal zc
334
normal zc
343
normal zc
349
normal zc
355
normal zc
363
normal zc
374
normal zc
381
normal zc
385
normal zc
396
normal zc
402
normal zc
407
normal zc
420
normal zc
430
normal zc
434
normal zc
446
normal zc
459
normal zc
464
normal zc
470
normal zc
478
normal zc
482
normal zc
492
normal zc
514
normal zo
514
normal zc
539
normal zc
551
normal zo
551
normal zc
581
normal zc
593
normal zc
605
normal zc
610
normal zc
618
normal zc
624
normal zc
638
normal zc
653
normal zc
664
normal zc
683
normal zc
694
normal zc
698
normal zc
707
normal zc
711
normal zc
715
normal zc
719
normal zc
727
normal zc
731
normal zc
736
normal zc
741
normal zc
747
normal zc
751
normal zc
755
normal zc
760
normal zc
764
normal zc
770
normal zc
777
normal zc
783
normal zc
789
normal zc
793
normal zc
797
normal zc
802
normal zc
807
normal zc
812
normal zc
817
normal zc
821
normal zc
829
normal zc
842
normal zc
848
normal zc
853
normal zc
858
normal zc
864
normal zc
870
normal zc
881
normal zc
887
normal zc
891
normal zc
896
normal zc
901
normal zc
905
normal zc
910
normal zc
916
normal zc
922
normal zc
927
normal zc
934
normal zc
939
normal zc
945
normal zc
953
normal zc
965
normal zc
975
normal zc
980
normal zc
989
normal zc
1004
normal zc
1009
normal zc
1017
normal zc
1027
normal zc
1034
normal zc
1038
normal zc
1043
normal zc
1049
normal zc
1058
normal zc
1064
normal zc
1068
normal zc
1075
normal zc
1080
normal zc
1086
normal zc
1097
normal zc
1107
normal zc
1113
normal zc
1119
normal zc
1146
normal zc
1152
normal zc
1159
normal zc
1167
normal zc
1180
normal zc
1184
normal zc
1191
normal zc
1208
normal zc
1230
normal zc
1244
normal zc
1250
normal zc
1258
normal zc
1267
normal zc
1304
normal zo
1304
normal zc
1548
normal zo
1666
normal zc
1837
normal zc
1855
normal zc
1922
normal zc
1931
normal zc
1977
normal zc
1987
normal zc
2022
normal zc
2027
normal zc
2039
normal zc
2054
normal zc
2064
normal zc
1548
normal zo
let s:l = 24 - ((23 * winheight(0) + 34) / 68)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
24
normal! 015l
tabnext 1
if exists('s:wipebuf')
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToOIA
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
